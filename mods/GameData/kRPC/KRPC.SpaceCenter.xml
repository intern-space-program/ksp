<?xml version="1.0"?>
<doc>
    <assembly>
        <name>KRPC.SpaceCenter</name>
    </assembly>
    <members>
        <member name="T:KRPC.SpaceCenter.AutoPilot.AttitudeController">
             <summary>
             Controller to hold a vessels attitude in a chosen orientation.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.AutoPilot.AttitudeController.ComputeCurrentAngularVelocity">
             <summary>
             Compute current angular velocity in pitch,roll,yaw axes
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.AutoPilot.AttitudeController.ComputeTargetAngularVelocity(Vector3d,Vector3d)">
             <summary>
             Compute target angular velocity in pitch,roll,yaw axes
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.AutoPilot.AttitudeController.AnglesToAngularVelocity(Vector3d,Vector3d,Vector3d)">
             <summary>
             Convert a vector of angles to a vector of angular velocities. This
             implements the function f(x) from the documentation.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.AutoPilot.PIDController">
             <summary>
             Robust, 3-parameter, proportional-integral-derivative controller
             https://brettbeauregard.com/blog/2011/04/improving-the-beginners-pid-introduction/
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.ActionGroupExtensions.GetActionGroup(System.UInt32)">
             <summary>
             Get the custom action group for a given index (1 through 9)
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.ExtensionMethods.ColorExtensions">
             <summary>
             Color extensions.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.ColorExtensions.ToTuple(UnityEngine.Color)">
             <summary>
             Convert the color to an RGB triple.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.ColorExtensions.ToColor(KRPC.Utils.Tuple{System.Double,System.Double,System.Double})">
             <summary>
             Convert an RGB triple to a color.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions">
             <summary>
             Extensions for geometry classes
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.ToTuple(UnityEngine.Vector2)">
             <summary>
             Convert a vector to a tuple
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.ToTuple(Vector3d)">
             <summary>
             Convert a vector to a tuple
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.ToTuple(UnityEngine.Vector3)">
             <summary>
             Convert a vector to a tuple
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.ToVector(KRPC.Utils.Tuple{System.Double,System.Double})">
             <summary>
             Convert a tuple to a vector
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.ToVector(KRPC.Utils.Tuple{System.Double,System.Double,System.Double})">
             <summary>
             Convert a tuple to a vector
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.ToTuple(UnityEngine.Quaternion)">
             <summary>
             Convert a quaternion to tuple
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.ToTuple(UnityEngine.QuaternionD)">
             <summary>
             Convert a quaternion to tuple
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.ToQuaternion(KRPC.Utils.Tuple{System.Double,System.Double,System.Double,System.Double})">
             <summary>
             Convert a tuple to a quaternion
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.ToList(UnityEngine.Matrix4x4)">
             <summary>
             Convert a Matrix4x4 (simulating a Matrix3x3) to a tuple of tuples
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.ToTuple(KRPC.Utils.Tuple{Vector3d,Vector3d})">
             <summary>
             Convert a pair of vectors to a pair of tuples
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.SwapYZ(Vector3d)">
             <summary>
             Swap the Y and Z components of a vector
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.NormAngle(System.Double)">
             <summary>
             Normalize an angle to the range (-180,180)
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.NormAngle(System.Single)">
             <summary>
             Normalize an angle to the range (-180,180)
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.Clamp(UnityEngine.Vector3,System.Single,System.Single)">
             <summary>
             Clamp the elements of a vector to the given range
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.ClampMagnitude(UnityEngine.Vector3,System.Single,System.Single)">
             <summary>
             Clamp the magnitude of a vector to the given range
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.Clamp``1(``0,``0,``0)">
             <summary>
             Clamp a value to the given range
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.ClampAngle360(System.Double)">
             <summary>
             Clamps the given angle to the range [0,360]
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.ClampAngle180(System.Double)">
             <summary>
             Clamps the given angle to the range [-180,180]
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.ToDegrees(System.Single)">
             <summary>
             Convert radians to degrees.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.ToDegrees(System.Double)">
             <summary>
             Convert radians to degrees.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.ToRadians(System.Single)">
             <summary>
             Convert degrees to radians.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.ToRadians(System.Double)">
             <summary>
             Convert degrees to radians.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.AxisOrder">
             <summary>
             Axis ordering
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.AxisOrder.YZX">
             <summary>
             y-z-x axis order
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.EulerAngles(UnityEngine.QuaternionD,KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.AxisOrder)">
             <summary>
             Extract euler angles from a quarternion using the specified axis order.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.PitchHeadingRoll(UnityEngine.QuaternionD)">
             <summary>
             Compute the pitch, heading and roll angles of a quaternion in degrees.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.QuaternionFromEuler(Vector3d,KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.AxisOrder)">
             <summary>
             Create a quaternion rotation from the given euler angles, and axis order.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.QuaternionFromPitchHeadingRoll(Vector3d)">
             <summary>
             Create a quarternion rotation for the given pitch, heading and roll angles.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.Inverse(UnityEngine.QuaternionD)">
             <summary>
             Compute the inverse quaternion. Assumes the input is a unit quaternion.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.OrthoNormalize2(Vector3d@,Vector3d@)">
             <summary>
             Implementation of QuaternionD.OrthoNormalize, using stabilized Gram-Schmidt
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.LookRotation2(Vector3d,Vector3d)">
             <summary>
             Implementation of QuaternionD.LookRotation
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.ProjectVectorOntoPlane(Vector3d,Vector3d)">
             <summary>
             Project a vector onto a plane, defined by its normal
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.Add(UnityEngine.Matrix4x4,UnityEngine.Matrix4x4)">
             <summary>
             Add a 4x4 Matrix into another one (does not allocate)
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.MultiplyScalar(UnityEngine.Matrix4x4,System.Single)">
             <summary>
             Multiply a 4x4 Matrix by a scalar (simulating 3x3 matrix) (does not allocate)
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.Diagonal(UnityEngine.Matrix4x4)">
             <summary>
             Returns the diagonal 3-vector from the 4x4 matrix (simulating 3x3 matrix)
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.ToDiagonalMatrix(System.Single)">
             <summary>
             Constructs diagonal matrix from a float (Identity * val)
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.ToDiagonalMatrix(UnityEngine.Vector3)">
             <summary>
             Constructs diagonal matrix from a 3-vector (simulating 3x3 matrix)
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.OuterProduct(UnityEngine.Vector3,UnityEngine.Vector3)">
             <summary>
             Construct the outer product of two 3-vectors as a 4x4 matrix
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.ToVertices(UnityEngine.Bounds)">
             <summary>
             Compute the vertices for an axis-aligned bounding box.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.GeometryExtensions.ToTuples(UnityEngine.Bounds)">
             <summary>
             Convert an axis-aligned bounding box to its min and max positions as tuples.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.ITorqueProviderExtensions">
             <summary>
             Extension methods for torque providers
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ITorqueProviderExtensions.GetPotentialTorque(ITorqueProvider)">
             <summary>
             Get the largest potential torque provided by the part, in Newton meters in the pitch, yaw and roll axes.
             Returns a pair of torques: the positive torque around each axis, and the negative torque.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.ITorqueProviderExtensions.zero">
             <summary>
             Zero pos/neg torque values.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ITorqueProviderExtensions.Sum(System.Collections.Generic.IEnumerable{KRPC.Utils.Tuple{Vector3d,Vector3d}})">
             <summary>
             Add the given pos/neg torque vectors
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.PartExtensions.HasModule``1(Part)">
             <summary>
             Returns true if the part contains the given part module
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.PartExtensions.HasModule(Part,System.String)">
             <summary>
             Returns true if the part contains the given part module
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.PartExtensions.Module``1(Part)">
             <summary>
             Returns the first part module of the specified type, or null if none can be found
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.PartExtensions.Module(Part,System.String)">
             <summary>
             Returns the first part module of the named type, or null if none can be found
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.PartExtensions.IsMassless(Part)">
             <summary>
             Returns true if the part is massless
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.PartExtensions.WetMass(Part)">
             <summary>
             The mass of the part, including resources, in kg.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.PartExtensions.DryMass(Part)">
             <summary>
             The mass of the part, excluding resources.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.PartExtensions.DecoupledAt(Part)">
             <summary>
             Returns the index of the stage in which the part will be decoupled, or -1 if it is never decoupled.
             Transversed the tree of parts from the desired part to the root, and finds the activation stage
             for the first decoupler that will decouple the part (the one with the highest stage number)
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.PartExtensions.CenterOfMass(Part)">
             <summary>
             Returns the position in world space of the center of mass of the part, or the parts transform position if it has no mass.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.PartExtensions.GetBounds(Part,KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             Computes the axis-aligned bounding box for a part in the given reference frame.
             </summary>
             <remarks>
             This is an expensive calculation. It iterates over the parts collider meshes
             to compute a tight axis-aligned bounding box.
             It does not use part.collider.bounds, as this is aligned to world space and
             would not provide a tight bounding box in the given reference frame.
             </remarks>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.StockAerodynamics.GetTemperature(Vector3d,CelestialBody)">
             <summary>
             This function should return exactly the same value as Vessel.atmDensity, but is more generic because you
             don't need an actual vessel updated by KSP to get a value at the desired location.
             Computations are performed for the current body position, which means it's theoritically wrong if you want
             to know the temperature in the future, but since body rotation is not used (position is given in sun frame),
             you should get accurate results up to a few weeks.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.StockAerodynamics.GetDensity(System.Double,CelestialBody)">
             <summary>
             Gets the air density (rho) for the specified altitude (above sea level, in meters) on the specified body.
             This is an approximation, because actual calculations, taking sun exposure into account to compute air
             temperature, require to know the actual point on the body where the density is to be computed
             (knowing the altitude is not enough).
             However, the difference is small for high altitudes, so it makes very little difference
             for trajectory prediction.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExtensionMethods.StockAerodynamics.GetPressure(System.Double,CelestialBody)">
             <summary>
             Gets the air pressure (in Pascals) for the specified altitude (above sea level, in meters) on the specified body.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.ExternalAPIAddon">
             <summary>
             Addon to load external APIs.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ExternalAPIAddon.Start">
             <summary>
             Load external APIs.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.NameTag.Career.CanTagInEditor(EditorFacility,System.String@)">
             <summary>
             Detect whether we'll allow you to add a NameTag to a part during the editor.
             You can always add one post-editor during flight, but during editing it will
             depend on building level.<br />
             NOTE: This method does NOT have an associated suffix because it is meant to be called
             from inside the editor, when a script won't be running.
             </summary>
             <param name="whichEditor">Pass in whether you are checking from the VAB or SPH.</param>
             <param name="reason">returns a string describing what would need upgrading to change the answer.</param>
             <returns>true if it can. false if it cannot.</returns>
            </member>
        <member name="M:KRPC.SpaceCenter.NameTag.Career.CanTagInEditor(EditorFacility)">
             <summary>
             Same as CanTagInEditor, but without the 'reason' parameter.  (This is a separate method
             only because you can't default out parameters like 'out string reason' to make them optional.)
             </summary>
             <returns>true if you can. false if you cannot.</returns>
            </member>
        <member name="M:KRPC.SpaceCenter.NameTag.Window.GoAwayEventCallback(Part)">
             <summary>
             Catch the event of the part disappearing, from crashing or
             from unloading from distance or scene change, and ensure
             the window closes if it was open when that happens:
             </summary>
             <param name="whichPartWentAway">The callback is called for EVERY part
             that ever goes away, so we have to check if it's the right one</param>
            </member>
        <member name="M:KRPC.SpaceCenter.NameTag.Window.SetEnabled(System.Boolean)">
             <summary>
             If you try to set a Unity.Behaviour.enabled to false when it already IS false,
             and Unity hasn't fully finished configuring the MonoBehaviour yet, the Property's
             "set" code throws a null ref error. How lame is that?
             That's why I wrapped every attempt to set enabled's value with this check, because KSP
             tries running my hooks in this class before Unity's ready for them.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.NameTag.Window.GetViewportPosFor(UnityEngine.Vector3)">
             <summary>
             Get the position in screen coordinates that the 3d world coordinates
             project onto, abstracting the two different ways KSP has to access
             the camera depending on view mode.
             Returned coords are in a system where the screen viewport goes from
             (0,0) to (1,1) and the Z coord is how far from the screen it is
             (-Z means behind you).
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.PartForcesAddon">
             <summary>
             Addon to apply forces to parts.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.PartForcesAddon.forces">
             <summary>
             The forces currently begin applied.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.PartForcesAddon.OnDestroy">
             <summary>
             Destroy the addon
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.PartForcesAddon.Add(KRPC.SpaceCenter.Services.Parts.Force)">
             <summary>
             Add a force
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.PartForcesAddon.AddInstantaneous(KRPC.SpaceCenter.Services.Parts.Force)">
             <summary>
             Add an instantaneous force
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.PartForcesAddon.Remove(KRPC.SpaceCenter.Services.Parts.Force)">
             <summary>
             Add a force
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.PartForcesAddon.FixedUpdate">
             <summary>
             Apply the forces to the parts
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.PartHighlightAddon">
             <summary>
             Addon to highlight parts.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.PartHighlightAddon.Awake">
             <summary>
             Set up the addon
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.PartHighlightAddon.OnDestroy">
             <summary>
             Destroy the addon
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.PilotAddon">
             <summary>
             Addon to update a vessels control inputs.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.PilotAddon.currentInputs">
             <summary>
             The current control inputs that the craft is using.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.PilotAddon.manualInputs">
             <summary>
             Control inputs that have been manually set.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.PilotAddon.manualInputClients">
             <summary>
             Set of all clients that have set a manual control input.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.PilotAddon.clearedManualInputs">
             <summary>
             Flag to determine if manual control inputs have been cleared
             as a result of all clients disconnecting.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.PilotAddon.autoPilotInputs">
             <summary>
             Control inputs that have been set by the auto-pilot.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.PilotAddon.controlDelegates">
             <summary>
             FlyByWire callbacks for vessels.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.PilotAddon.remoteTechSanctionedDelegates">
             <summary>
             Set of FlyByWire callbacks that have been registered with RemoteTech.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.PilotAddon.Awake">
             <summary>
             Wake the addon
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.PilotAddon.OnDestroy">
             <summary>
             Destroy the addon
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.PilotAddon.CheckClients">
             <summary>
             Remove disconnect clients from the manualInputClients set
             and clear manual inputs if no clients are connected.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.PilotAddon.FixedUpdate">
             <summary>
             Update the pilot addon
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.PilotAddon.HandleThrottle(Vessel,KRPC.SpaceCenter.PilotAddon.ControlInputs)">
             <summary>
             Handle throttle quirky operation...
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.ResourceTransferAddon">
             <summary>
             Addon to perform resource transfers between parts.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.ResourceTransferAddon.transfers">
             <summary>
             The transfers currently in progress.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ResourceTransferAddon.OnDestroy">
             <summary>
             Destroy the addon
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ResourceTransferAddon.AddTransfer(KRPC.SpaceCenter.Services.ResourceTransfer)">
             <summary>
             Add a new transfer
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.ResourceTransferAddon.FixedUpdate">
             <summary>
             Update the transfers
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.AutoPilot">
             <summary>
             Provides basic auto-piloting utilities for a vessel.
             Created by calling <see cref="P:KRPC.SpaceCenter.Services.Vessel.AutoPilot" />.
             </summary>
             <remarks>
             If a client engages the auto-pilot and then closes its connection to the server,
             the auto-pilot will be disengaged and its target reference frame, direction and roll
             reset to default.
             </remarks>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.AutoPilot.Equals(KRPC.SpaceCenter.Services.AutoPilot)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.AutoPilot.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.AutoPilot.InternalVessel">
             <summary>
             The KSP vessel.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.AutoPilot.Engage">
             <summary>
             Engage the auto-pilot.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.AutoPilot.Disengage">
             <summary>
             Disengage the auto-pilot.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.AutoPilot.Wait">
             <summary>
             Blocks until the vessel is pointing in the target direction and has
             the target roll (if set). Throws an exception if the auto-pilot has not been engaged.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.AutoPilot.Error">
             <summary>
             The error, in degrees, between the direction the ship has been asked
             to point in and the direction it is pointing in. Throws an exception if the auto-pilot
             has not been engaged and SAS is not enabled or is in stability assist mode.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.AutoPilot.PitchError">
             <summary>
             The error, in degrees, between the vessels current and target pitch.
             Throws an exception if the auto-pilot has not been engaged.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.AutoPilot.HeadingError">
             <summary>
             The error, in degrees, between the vessels current and target heading.
             Throws an exception if the auto-pilot has not been engaged.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.AutoPilot.RollError">
             <summary>
             The error, in degrees, between the vessels current and target roll.
             Throws an exception if the auto-pilot has not been engaged or no target roll is set.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.AutoPilot.ReferenceFrame">
             <summary>
             The reference frame for the target direction (<see cref="P:KRPC.SpaceCenter.Services.AutoPilot.TargetDirection" />).
             </summary>
             <remarks>
             An error will be thrown if this property is set to a reference frame that rotates with
             the vessel being controlled, as it is impossible to rotate the vessel in such a
             reference frame.
             </remarks>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.AutoPilot.TargetPitch">
             <summary>
             The target pitch, in degrees, between -90° and +90°.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.AutoPilot.TargetHeading">
             <summary>
             The target heading, in degrees, between 0° and 360°.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.AutoPilot.TargetRoll">
             <summary>
             The target roll, in degrees. <c>NaN</c> if no target roll is set.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.AutoPilot.TargetPitchAndHeading(System.Single,System.Single)">
             <summary>
             Set target pitch and heading angles.
             </summary>
             <param name="pitch">Target pitch angle, in degrees between -90° and +90°.</param>
             <param name="heading">Target heading angle, in degrees between 0° and 360°.</param>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.AutoPilot.TargetDirection">
             <summary>
             Direction vector corresponding to the target pitch and heading.
             This is in the reference frame specified by <see cref="T:KRPC.SpaceCenter.Services.ReferenceFrame" />.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.AutoPilot.SAS">
             <summary>
             The state of SAS.
             </summary>
             <remarks>Equivalent to <see cref="P:KRPC.SpaceCenter.Services.Control.SAS" /></remarks>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.AutoPilot.SASMode">
             <summary>
             The current <see cref="T:KRPC.SpaceCenter.Services.SASMode" />.
             These modes are equivalent to the mode buttons to the left of the navball that appear
             when SAS is enabled.
             </summary>
             <remarks>Equivalent to <see cref="P:KRPC.SpaceCenter.Services.Control.SASMode" /></remarks>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.AutoPilot.RollThreshold">
             <summary>
             The threshold at which the autopilot will try to match the target roll angle, if any.
             Defaults to 5 degrees.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.AutoPilot.StoppingTime">
             <summary>
             The maximum amount of time that the vessel should need to come to a complete stop.
             This determines the maximum angular velocity of the vessel.
             A vector of three stopping times, in seconds, one for each of the pitch, roll
             and yaw axes. Defaults to 0.5 seconds for each axis.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.AutoPilot.DecelerationTime">
             <summary>
             The time the vessel should take to come to a stop pointing in the target direction.
             This determines the angular acceleration used to decelerate the vessel.
             A vector of three times, in seconds, one for each of the pitch, roll and yaw axes.
             Defaults to 5 seconds for each axis.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.AutoPilot.AttenuationAngle">
             <summary>
             The angle at which the autopilot considers the vessel to be pointing
             close to the target.
             This determines the midpoint of the target velocity attenuation function.
             A vector of three angles, in degrees, one for each of the pitch, roll and yaw axes.
             Defaults to 1° for each axis.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.AutoPilot.AutoTune">
             <summary>
             Whether the rotation rate controllers PID parameters should be automatically tuned
             using the vessels moment of inertia and available torque. Defaults to <c>true</c>.
             See <see cref="P:KRPC.SpaceCenter.Services.AutoPilot.TimeToPeak" /> and <see cref="P:KRPC.SpaceCenter.Services.AutoPilot.Overshoot" />.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.AutoPilot.TimeToPeak">
             <summary>
             The target time to peak used to autotune the PID controllers.
             A vector of three times, in seconds, for each of the pitch, roll and yaw axes.
             Defaults to 3 seconds for each axis.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.AutoPilot.Overshoot">
             <summary>
             The target overshoot percentage used to autotune the PID controllers.
             A vector of three values, between 0 and 1, for each of the pitch, roll and yaw axes.
             Defaults to 0.01 for each axis.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.AutoPilot.PitchPIDGains">
             <summary>
             Gains for the pitch PID controller.
             </summary>
             <remarks>
             When <see cref="P:KRPC.SpaceCenter.Services.AutoPilot.AutoTune" /> is true, these values are updated automatically,
             which will overwrite any manual changes.
             </remarks>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.AutoPilot.RollPIDGains">
             <summary>
             Gains for the roll PID controller.
             </summary>
             <remarks>
             When <see cref="P:KRPC.SpaceCenter.Services.AutoPilot.AutoTune" /> is true, these values are updated automatically,
             which will overwrite any manual changes.
             </remarks>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.AutoPilot.YawPIDGains">
             <summary>
             Gains for the yaw PID controller.
             </summary>
             <remarks>
             When <see cref="P:KRPC.SpaceCenter.Services.AutoPilot.AutoTune" /> is true, these values are updated automatically,
             which will overwrite any manual changes.
             </remarks>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.AutoPilot.SASTargetDirection">
             <summary>
             The direction vector that the SAS autopilot is trying to hold in world space.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Camera">
             <summary>
             Controls the game's camera.
             Obtained by calling <see cref="P:KRPC.SpaceCenter.Services.SpaceCenter.Camera" />.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Camera.#ctor">
             <summary>
             Create a camera object.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Camera.Equals(KRPC.SpaceCenter.Services.Camera)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Camera.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Camera.Mode">
             <summary>
             The current mode of the camera.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Camera.Pitch">
             <summary>
             The pitch of the camera, in degrees.
             A value between <see cref="P:KRPC.SpaceCenter.Services.Camera.MinPitch" /> and <see cref="P:KRPC.SpaceCenter.Services.Camera.MaxPitch" />
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Camera.Heading">
             <summary>
             The heading of the camera, in degrees.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Camera.Distance">
             <summary>
             The distance from the camera to the subject, in meters.
             A value between <see cref="P:KRPC.SpaceCenter.Services.Camera.MinDistance" /> and <see cref="P:KRPC.SpaceCenter.Services.Camera.MaxDistance" />.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Camera.MinPitch">
             <summary>
             The minimum pitch of the camera.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Camera.MaxPitch">
             <summary>
             The maximum pitch of the camera.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Camera.MinDistance">
             <summary>
             Minimum distance from the camera to the subject, in meters.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Camera.MaxDistance">
             <summary>
             Maximum distance from the camera to the subject, in meters.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Camera.DefaultDistance">
             <summary>
             Default distance from the camera to the subject, in meters.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Camera.FocussedBody">
             <summary>
             In map mode, the celestial body that the camera is focussed on.
             Returns <c>null</c> if the camera is not focussed on a celestial body.
             Returns an error is the camera is not in map mode.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Camera.FocussedVessel">
             <summary>
             In map mode, the vessel that the camera is focussed on.
             Returns <c>null</c> if the camera is not focussed on a vessel.
             Returns an error is the camera is not in map mode.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Camera.FocussedNode">
             <summary>
             In map mode, the maneuver node that the camera is focussed on.
             Returns <c>null</c> if the camera is not focussed on a maneuver node.
             Returns an error is the camera is not in map mode.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.CameraMode">
             <summary>
             See <see cref="P:KRPC.SpaceCenter.Services.Camera.Mode" />.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.CameraMode.Automatic">
             <summary>
             The camera is showing the active vessel, in "auto" mode.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.CameraMode.Free">
             <summary>
             The camera is showing the active vessel, in "free" mode.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.CameraMode.Chase">
             <summary>
             The camera is showing the active vessel, in "chase" mode.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.CameraMode.Locked">
             <summary>
             The camera is showing the active vessel, in "locked" mode.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.CameraMode.Orbital">
             <summary>
             The camera is showing the active vessel, in "orbital" mode.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.CameraMode.IVA">
             <summary>
             The Intra-Vehicular Activity view is being shown.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.CameraMode.Map">
             <summary>
             The map view is being shown.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.CelestialBody">
             <summary>
             Represents a celestial body (such as a planet or moon).
             See <see cref="P:KRPC.SpaceCenter.Services.SpaceCenter.Bodies" />.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.CelestialBody.#ctor(CelestialBody)">
             <summary>
             Construct from a KSP celestial body object.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.CelestialBody.Equals(KRPC.SpaceCenter.Services.CelestialBody)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.CelestialBody.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CelestialBody.InternalBody">
             <summary>
             The KSP celestial body object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CelestialBody.Name">
             <summary>
             The name of the body.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CelestialBody.Satellites">
             <summary>
             A list of celestial bodies that are in orbit around this celestial body.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CelestialBody.Mass">
             <summary>
             The mass of the body, in kilograms.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CelestialBody.GravitationalParameter">
             <summary>
             The <a href="https://en.wikipedia.org/wiki/Standard_gravitational_parameter">standard
             gravitational parameter</a> of the body in <math>m^3s^{-2}</math>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CelestialBody.SurfaceGravity">
             <summary>
             The acceleration due to gravity at sea level (mean altitude) on the body,
             in <math>m/s^2</math>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CelestialBody.RotationalPeriod">
             <summary>
             The sidereal rotational period of the body, in seconds.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CelestialBody.RotationalSpeed">
             <summary>
             The rotational speed of the body, in radians per second.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CelestialBody.RotationAngle">
             <summary>
             The current rotation angle of the body, in radians.
             A value between 0 and <math>2\pi</math>
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CelestialBody.InitialRotation">
             <summary>
             The initial rotation angle of the body (at UT 0), in radians.
             A value between 0 and <math>2\pi</math>
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CelestialBody.EquatorialRadius">
             <summary>
             The equatorial radius of the body, in meters.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.CelestialBody.SurfaceHeight(System.Double,System.Double)">
             <summary>
             The height of the surface relative to mean sea level, in meters,
             at the given position. When over water this is equal to 0.
             </summary>
             <param name="latitude">Latitude in degrees.</param>
             <param name="longitude">Longitude in degrees.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.CelestialBody.BedrockHeight(System.Double,System.Double)">
             <summary>
             The height of the surface relative to mean sea level, in meters,
             at the given position. When over water, this is the height
             of the sea-bed and is therefore  negative value.
             </summary>
             <param name="latitude">Latitude in degrees.</param>
             <param name="longitude">Longitude in degrees.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.CelestialBody.MSLPosition(System.Double,System.Double,KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The position at mean sea level at the given latitude and longitude,
             in the given reference frame.
             </summary>
             <returns>Position as a vector.</returns>
             <param name="latitude">Latitude in degrees.</param>
             <param name="longitude">Longitude in degrees.</param>
             <param name="referenceFrame">Reference frame for the returned position vector.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.CelestialBody.SurfacePosition(System.Double,System.Double,KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The position of the surface at the given latitude and longitude, in the given
             reference frame. When over water, this is the position of the surface of the water.
             </summary>
             <returns>Position as a vector.</returns>
             <param name="latitude">Latitude in degrees.</param>
             <param name="longitude">Longitude in degrees.</param>
             <param name="referenceFrame">Reference frame for the returned position vector.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.CelestialBody.BedrockPosition(System.Double,System.Double,KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The position of the surface at the given latitude and longitude, in the given
             reference frame. When over water, this is the position at the bottom of the sea-bed.
             </summary>
             <returns>Position as a vector.</returns>
             <param name="latitude">Latitude in degrees.</param>
             <param name="longitude">Longitude in degrees.</param>
             <param name="referenceFrame">Reference frame for the returned position vector.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.CelestialBody.PositionAtAltitude(System.Double,System.Double,System.Double,KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The position at the given latitude, longitude and altitude, in the given reference frame.
             </summary>
             <returns>Position as a vector.</returns>
             <param name="latitude">Latitude in degrees.</param>
             <param name="longitude">Longitude in degrees.</param>
             <param name="altitude">Altitude in meters above sea level.</param>
             <param name="referenceFrame">Reference frame for the returned position vector.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.CelestialBody.LatitudeAtPosition(KRPC.Utils.Tuple{System.Double,System.Double,System.Double},KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The latitude of the given position, in the given reference frame.
             </summary>
             <param name="position">Position as a vector.</param>
             <param name="referenceFrame">Reference frame for the position vector.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.CelestialBody.LongitudeAtPosition(KRPC.Utils.Tuple{System.Double,System.Double,System.Double},KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The longitude of the given position, in the given reference frame.
             </summary>
             <param name="position">Position as a vector.</param>
             <param name="referenceFrame">Reference frame for the position vector.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.CelestialBody.AltitudeAtPosition(KRPC.Utils.Tuple{System.Double,System.Double,System.Double},KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The altitude, in meters, of the given position in the given reference frame.
             </summary>
             <param name="position">Position as a vector.</param>
             <param name="referenceFrame">Reference frame for the position vector.</param>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CelestialBody.SphereOfInfluence">
             <summary>
             The radius of the sphere of influence of the body, in meters.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CelestialBody.Orbit">
             <summary>
             The orbit of the body.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CelestialBody.HasAtmosphere">
             <summary>
             <c>true</c> if the body has an atmosphere.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CelestialBody.AtmosphereDepth">
             <summary>
             The depth of the atmosphere, in meters.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.CelestialBody.AtmosphericDensityAtPosition(KRPC.Utils.Tuple{System.Double,System.Double,System.Double},KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The atmospheric density at the given position, in <math>kg/m^3</math>,
             in the given reference frame.
             </summary>
             <param name="position">The position vector at which to measure the density.</param>
             <param name="referenceFrame">Reference frame that the position vector is in.</param>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CelestialBody.HasAtmosphericOxygen">
             <summary>
             <c>true</c> if there is oxygen in the atmosphere, required for air-breathing engines.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.CelestialBody.TemperatureAt(KRPC.Utils.Tuple{System.Double,System.Double,System.Double},KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The temperature on the body at the given position, in the given reference frame.
             </summary>
             <param name="position">Position as a vector.</param>
             <param name="referenceFrame">The reference frame that the position is in.</param>
             <remarks>
             This calculation is performed using the bodies current position, which means that
             the value could be wrong if you want to know the temperature in the far future.
             </remarks>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.CelestialBody.DensityAt(System.Double)">
             <summary>
             Gets the air density, in <math>kg/m^3</math>, for the specified
             altitude above sea level, in meters.
             </summary>
             <remarks>
             This is an approximation, because actual calculations, taking sun exposure into account
             to compute air temperature, require us to know the exact point on the body where the
             density is to be computed (knowing the altitude is not enough).
             However, the difference is small for high altitudes, so it makes very little difference
             for trajectory prediction.
             </remarks>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.CelestialBody.PressureAt(System.Double)">
             <summary>
             Gets the air pressure, in Pascals, for the specified
             altitude above sea level, in meters.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CelestialBody.Biomes">
             <summary>
             The biomes present on this body.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.CelestialBody.BiomeAt(System.Double,System.Double)">
             <summary>
             The biome at the given latitude and longitude, in degrees.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CelestialBody.FlyingHighAltitudeThreshold">
             <summary>
             The altitude, in meters, above which a vessel is considered to be
             flying "high" when doing science.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CelestialBody.SpaceHighAltitudeThreshold">
             <summary>
             The altitude, in meters, above which a vessel is considered to be
             in "high" space when doing science.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CelestialBody.ReferenceFrame">
             <summary>
             The reference frame that is fixed relative to the celestial body.
             <list type="bullet">
             <item><description>The origin is at the center of the body.
             </description></item>
             <item><description>The axes rotate with the body.</description></item>
             <item><description>The x-axis points from the center of the body
             towards the intersection of the prime meridian and equator (the
             position at 0° longitude, 0° latitude).</description></item>
             <item><description>The y-axis points from the center of the body
             towards the north pole.</description></item>
             <item><description>The z-axis points from the center of the body
             towards the equator at 90°E longitude.</description></item>
             </list>
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CelestialBody.NonRotatingReferenceFrame">
             <summary>
             The reference frame that is fixed relative to this celestial body, and
             orientated in a fixed direction (it does not rotate with the body).
             <list type="bullet">
             <item><description>The origin is at the center of the body.</description></item>
             <item><description>The axes do not rotate.</description></item>
             <item><description>The x-axis points in an arbitrary direction through the
             equator.</description></item>
             <item><description>The y-axis points from the center of the body towards
             the north pole.</description></item>
             <item><description>The z-axis points in an arbitrary direction through the
             equator.</description></item>
             </list>
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CelestialBody.OrbitalReferenceFrame">
             <summary>
             The reference frame that is fixed relative to this celestial body, but
             orientated with the body's orbital prograde/normal/radial directions.
             <list type="bullet">
             <item><description>The origin is at the center of the body.
             </description></item>
             <item><description>The axes rotate with the orbital prograde/normal/radial
             directions.</description></item>
             <item><description>The x-axis points in the orbital anti-radial direction.
             </description></item>
             <item><description>The y-axis points in the orbital prograde direction.
             </description></item>
             <item><description>The z-axis points in the orbital normal direction.
             </description></item>
             </list>
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.CelestialBody.Position(KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The position of the center of the body, in the specified reference frame.
             </summary>
             <returns>The position as a vector.</returns>
             <param name="referenceFrame">The reference frame that the returned
             position vector is in.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.CelestialBody.Velocity(KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The linear velocity of the body, in the specified reference frame.
             </summary>
             <returns>The velocity as a vector. The vector points in the direction of travel,
             and its magnitude is the speed of the body in meters per second.</returns>
             <param name="referenceFrame">The reference frame that the returned
             velocity vector is in.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.CelestialBody.Rotation(KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The rotation of the body, in the specified reference frame.
             </summary>
             <returns>The rotation as a quaternion of the form <math>(x, y, z, w)</math>.</returns>
             <param name="referenceFrame">The reference frame that the returned
             rotation is in.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.CelestialBody.Direction(KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The direction in which the north pole of the celestial body is pointing,
             in the specified reference frame.
             </summary>
             <returns>The direction as a unit vector.</returns>
             <param name="referenceFrame">The reference frame that the returned
             direction is in.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.CelestialBody.AngularVelocity(KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The angular velocity of the body in the specified reference frame.
             </summary>
             <returns>The angular velocity as a vector. The magnitude of the vector is the rotational
             speed of the body, in radians per second. The direction of the vector indicates the axis
             of rotation, using the right-hand rule.</returns>
             <param name="referenceFrame">The reference frame the returned
             angular velocity is in.</param>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.CommLink">
             <summary>
             Represents a communication node in the network. For example, a vessel or the KSC.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.CommLink.#ctor(CommNet.CommLink)">
             <summary>
             Construct from a KSP CommLink object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CommLink.InternalLink">
             <summary>
             KSP CommLink object.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.CommLink.Equals(KRPC.SpaceCenter.Services.CommLink)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.CommLink.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CommLink.Type">
             <summary>
             The type of link.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CommLink.SignalStrength">
             <summary>
             Signal strength of the link.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CommLink.Start">
             <summary>
             Start point of the link.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CommLink.End">
             <summary>
             Start point of the link.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.CommLinkType">
             <summary>
             The type of a communication link.
             See <see cref="P:KRPC.SpaceCenter.Services.CommLink.Type" />.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.CommLinkType.Home">
             <summary>
             Link is to a base station on Kerbin.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.CommLinkType.Control">
             <summary>
             Link is to a control source, for example a manned spacecraft.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.CommLinkType.Relay">
             <summary>
             Link is to a relay satellite.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.CommNode">
             <summary>
             Represents a communication node in the network. For example, a vessel or the KSC.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.CommNode.#ctor(CommNet.CommNode)">
             <summary>
             Construct from a KSP CommNode object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CommNode.InternalNode">
             <summary>
             KSP CommNode object
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.CommNode.Equals(KRPC.SpaceCenter.Services.CommNode)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.CommNode.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CommNode.Name">
             <summary>
             Name of the communication node.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CommNode.IsHome">
             <summary>
             Whether the communication node is on Kerbin.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CommNode.IsControlPoint">
             <summary>
             Whether the communication node is a control point, for example a manned vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CommNode.IsVessel">
             <summary>
             Whether the communication node is a vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CommNode.Vessel">
             <summary>
             The vessel for this communication node.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Comms">
             <summary>
             Used to interact with CommNet for a given vessel.
             Obtained by calling <see cref="P:KRPC.SpaceCenter.Services.Vessel.Comms" />.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Comms.#ctor(KRPC.SpaceCenter.Services.Vessel)">
             <summary>
             Construct from a KSP vessel object.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Comms.#ctor(System.Guid)">
             <summary>
             Construct from a KSP vessel id.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Comms.Equals(KRPC.SpaceCenter.Services.Comms)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Comms.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Comms.VesselId">
             <summary>
             The KSP vessel id.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Comms.InternalVessel">
             <summary>
             The KSP vessel object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Comms.InternalComms">
             <summary>
             The KSP vessel communication object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Comms.CanCommunicate">
             <summary>
             Whether the vessel can communicate with KSC.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Comms.CanTransmitScience">
             <summary>
             Whether the vessel can transmit science data to KSC.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Comms.SignalStrength">
             <summary>
             Signal strength to KSC.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Comms.SignalDelay">
             <summary>
             Signal delay to KSC in seconds.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Comms.Power">
             <summary>
             The combined power of all active antennae on the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Comms.ControlPath">
             <summary>
             The communication path used to control the vessel.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Contract">
             <summary>
             A contract. Can be accessed using <see cref="P:KRPC.SpaceCenter.Services.SpaceCenter.ContractManager" />.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Contract.#ctor(Contracts.Contract)">
             <summary>
             Create a contract object from a KSP contract.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Contract.InternalContract">
             <summary>
             The KSP contract.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Contract.Equals(KRPC.SpaceCenter.Services.Contract)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Contract.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Contract.Type">
             <summary>
             Type of the contract.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Contract.Title">
             <summary>
             Title of the contract.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Contract.Description">
             <summary>
             Description of the contract.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Contract.Notes">
             <summary>
             Notes for the contract.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Contract.Synopsis">
             <summary>
             Synopsis for the contract.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Contract.Keywords">
             <summary>
             Keywords for the contract.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Contract.State">
             <summary>
             State of the contract.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Contract.Active">
             <summary>
             Whether the contract is active.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Contract.Failed">
             <summary>
             Whether the contract has been failed.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Contract.Seen">
             <summary>
             Whether the contract has been seen.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Contract.Read">
             <summary>
             Whether the contract has been read.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Contract.CanBeCanceled">
             <summary>
             Whether the contract can be canceled.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Contract.CanBeDeclined">
             <summary>
             Whether the contract can be declined.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Contract.CanBeFailed">
             <summary>
             Whether the contract can be failed.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Contract.Cancel">
             <summary>
             Cancel an active contract.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Contract.Accept">
             <summary>
             Accept an offered contract.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Contract.Decline">
             <summary>
             Decline an offered contract.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Contract.FundsAdvance">
             <summary>
             Funds received when accepting the contract.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Contract.FundsCompletion">
             <summary>
             Funds received on completion of the contract.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Contract.FundsFailure">
             <summary>
             Funds lost if the contract is failed.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Contract.ReputationCompletion">
             <summary>
             Reputation gained on completion of the contract.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Contract.ReputationFailure">
             <summary>
             Reputation lost if the contract is failed.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Contract.ScienceCompletion">
             <summary>
             Science gained on completion of the contract.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Contract.Parameters">
             <summary>
             Parameters for the contract.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.ContractManager">
             <summary>
             Contracts manager.
             Obtained by calling <see cref="P:KRPC.SpaceCenter.Services.SpaceCenter.ContractManager" />.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.ContractManager.Equals(KRPC.SpaceCenter.Services.ContractManager)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.ContractManager.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ContractManager.Types">
             <summary>
             A list of all contract types.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ContractManager.AllContracts">
             <summary>
             A list of all contracts.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ContractManager.ActiveContracts">
             <summary>
             A list of all active contracts.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ContractManager.OfferedContracts">
             <summary>
             A list of all offered, but unaccepted, contracts.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ContractManager.CompletedContracts">
             <summary>
             A list of all completed contracts.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ContractManager.FailedContracts">
             <summary>
             A list of all failed contracts.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.ContractParameter">
             <summary>
             A contract parameter. See <see cref="P:KRPC.SpaceCenter.Services.Contract.Parameters" />.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.ContractParameter.#ctor(Contracts.ContractParameter)">
             <summary>
             Create a contract parameter object from a KSP contract parameter.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ContractParameter.InternalParameter">
             <summary>
             The KSP contract parameter.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.ContractParameter.Equals(KRPC.SpaceCenter.Services.ContractParameter)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.ContractParameter.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ContractParameter.Title">
             <summary>
             Title of the parameter.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ContractParameter.Notes">
             <summary>
             Notes for the parameter.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ContractParameter.Children">
             <summary>
             Child contract parameters.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ContractParameter.Completed">
             <summary>
             Whether the parameter has been completed.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ContractParameter.Failed">
             <summary>
             Whether the parameter has been failed.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ContractParameter.Optional">
             <summary>
             Whether the contract parameter is optional.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ContractParameter.FundsCompletion">
             <summary>
             Funds received on completion of the contract parameter.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ContractParameter.FundsFailure">
             <summary>
             Funds lost if the contract parameter is failed.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ContractParameter.ReputationCompletion">
             <summary>
             Reputation gained on completion of the contract parameter.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ContractParameter.ReputationFailure">
             <summary>
             Reputation lost if the contract parameter is failed.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ContractParameter.ScienceCompletion">
             <summary>
             Science gained on completion of the contract parameter.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.ContractState">
             <summary>
             The state of a contract. See <see cref="P:KRPC.SpaceCenter.Services.Contract.State" />.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ContractState.Active">
             <summary>
             The contract is active.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ContractState.Canceled">
             <summary>
             The contract has been canceled.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ContractState.Completed">
             <summary>
             The contract has been completed.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ContractState.DeadlineExpired">
             <summary>
             The deadline for the contract has expired.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ContractState.Declined">
             <summary>
             The contract has been declined.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ContractState.Failed">
             <summary>
             The contract has been failed.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ContractState.Generated">
             <summary>
             The contract has been generated.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ContractState.Offered">
             <summary>
             The contract has been offered to the player.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ContractState.OfferExpired">
             <summary>
             The contract was offered to the player, but the offer expired.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ContractState.Withdrawn">
             <summary>
             The contract has been withdrawn.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Control">
             <summary>
             Used to manipulate the controls of a vessel. This includes adjusting the
             throttle, enabling/disabling systems such as SAS and RCS, or altering the
             direction in which the vessel is pointing.
             Obtained by calling <see cref="P:KRPC.SpaceCenter.Services.Vessel.Control" />.
             </summary>
             <remarks>
             Control inputs (such as pitch, yaw and roll) are zeroed when all clients
             that have set one or more of these inputs are no longer connected.
             </remarks>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Control.Equals(KRPC.SpaceCenter.Services.Control)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Control.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Control.InternalVessel">
             <summary>
             The KSP vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Control.State">
             <summary>
             The control state of the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Control.Source">
             <summary>
             The source of the vessels control, for example by a kerbal or a probe core.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Control.SAS">
             <summary>
             The state of SAS.
             </summary>
             <remarks>Equivalent to <see cref="P:KRPC.SpaceCenter.Services.AutoPilot.SAS" /></remarks>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Control.SASMode">
             <summary>
             The current <see cref="T:KRPC.SpaceCenter.Services.SASMode" />.
             These modes are equivalent to the mode buttons to
             the left of the navball that appear when SAS is enabled.
             </summary>
             <remarks>Equivalent to <see cref="P:KRPC.SpaceCenter.Services.AutoPilot.SASMode" /></remarks>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Control.SpeedMode">
             <summary>
             The current <see cref="T:KRPC.SpaceCenter.Services.SpeedMode" /> of the navball.
             This is the mode displayed next to the speed at the top of the navball.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Control.RCS">
             <summary>
             The state of RCS.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Control.ReactionWheels">
             <summary>
             Returns whether all reactive wheels on the vessel are active,
             and sets the active state of all reaction wheels.
             See <see cref="P:KRPC.SpaceCenter.Services.Parts.ReactionWheel.Active" />.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Control.Gear">
             <summary>
             The state of the landing gear/legs.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Control.Legs">
             <summary>
             Returns whether all landing legs on the vessel are deployed,
             and sets the deployment state of all landing legs.
             Does not include wheels (for example landing gear).
             See <see cref="P:KRPC.SpaceCenter.Services.Parts.Leg.Deployed" />.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Control.Wheels">
             <summary>
             Returns whether all wheels on the vessel are deployed,
             and sets the deployment state of all wheels.
             Does not include landing legs.
             See <see cref="P:KRPC.SpaceCenter.Services.Parts.Wheel.Deployed" />.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Control.Lights">
             <summary>
             The state of the lights.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Control.Brakes">
             <summary>
             The state of the wheel brakes.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Control.Antennas">
             <summary>
             Returns whether all antennas on the vessel are deployed,
             and sets the deployment state of all antennas.
             See <see cref="P:KRPC.SpaceCenter.Services.Parts.Antenna.Deployed" />.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Control.CargoBays">
             <summary>
             Returns whether any of the cargo bays on the vessel are open,
             and sets the open state of all cargo bays.
             See <see cref="P:KRPC.SpaceCenter.Services.Parts.CargoBay.Open" />.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Control.Intakes">
             <summary>
             Returns whether all of the air intakes on the vessel are open,
             and sets the open state of all air intakes.
             See <see cref="P:KRPC.SpaceCenter.Services.Parts.Intake.Open" />.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Control.Parachutes">
             <summary>
             Returns whether all parachutes on the vessel are deployed,
             and sets the deployment state of all parachutes.
             Cannot be set to <c>false</c>.
             See <see cref="P:KRPC.SpaceCenter.Services.Parts.Parachute.Deployed" />.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Control.Radiators">
             <summary>
             Returns whether all radiators on the vessel are deployed,
             and sets the deployment state of all radiators.
             See <see cref="P:KRPC.SpaceCenter.Services.Parts.Radiator.Deployed" />.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Control.ResourceHarvesters">
             <summary>
             Returns whether all of the resource harvesters on the vessel are deployed,
             and sets the deployment state of all resource harvesters.
             See <see cref="P:KRPC.SpaceCenter.Services.Parts.ResourceHarvester.Deployed" />.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Control.ResourceHarvestersActive">
             <summary>
             Returns whether any of the resource harvesters on the vessel are active,
             and sets the active state of all resource harvesters.
             See <see cref="P:KRPC.SpaceCenter.Services.Parts.ResourceHarvester.Active" />.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Control.SolarPanels">
             <summary>
             Returns whether all solar panels on the vessel are deployed,
             and sets the deployment state of all solar panels.
             See <see cref="P:KRPC.SpaceCenter.Services.Parts.SolarPanel.Deployed" />.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Control.Abort">
             <summary>
             The state of the abort action group.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Control.Throttle">
             <summary>
             The state of the throttle. A value between 0 and 1.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Control.InputMode">
             <summary>
             Sets the behavior of the pitch, yaw, roll and translation control inputs.
             When set to additive, these inputs are added to the vessels current inputs.
             This mode is the default.
             When set to override, these inputs (if non-zero) override the vessels inputs.
             This mode prevents keyboard control, or SAS, from interfering with the controls when
             they are set.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Control.Pitch">
             <summary>
             The state of the pitch control.
             A value between -1 and 1.
             Equivalent to the w and s keys.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Control.Yaw">
             <summary>
             The state of the yaw control.
             A value between -1 and 1.
             Equivalent to the a and d keys.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Control.Roll">
             <summary>
             The state of the roll control.
             A value between -1 and 1.
             Equivalent to the q and e keys.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Control.Forward">
             <summary>
             The state of the forward translational control.
             A value between -1 and 1.
             Equivalent to the h and n keys.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Control.Up">
             <summary>
             The state of the up translational control.
             A value between -1 and 1.
             Equivalent to the i and k keys.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Control.Right">
             <summary>
             The state of the right translational control.
             A value between -1 and 1.
             Equivalent to the j and l keys.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Control.WheelThrottle">
             <summary>
             The state of the wheel throttle.
             A value between -1 and 1.
             A value of 1 rotates the wheels forwards, a value of -1 rotates
             the wheels backwards.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Control.WheelSteering">
             <summary>
             The state of the wheel steering.
             A value between -1 and 1.
             A value of 1 steers to the left, and a value of -1 steers to the right.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Control.CurrentStage">
             <summary>
             The current stage of the vessel. Corresponds to the stage number in
             the in-game UI.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Control.ActivateNextStage">
             <summary>
             Activates the next stage. Equivalent to pressing the space bar in-game.
             </summary>
             <returns>A list of vessel objects that are jettisoned from the active vessel.</returns>
             <remarks>
             When called, the active vessel may change. It is therefore possible that,
             after calling this function, the object(s) returned by previous call(s) to
             <see cref="P:KRPC.SpaceCenter.Services.SpaceCenter.ActiveVessel" /> no longer refer to the active vessel.
             </remarks>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Control.GetActionGroup(System.UInt32)">
             <summary>
             Returns <c>true</c> if the given action group is enabled.
             </summary>
             <param name="group">
             A number between 0 and 9 inclusive,
             or between 0 and 250 inclusive when the <a href="https://forum.kerbalspaceprogram.com/index.php?/topic/67235-122dec1016-action-groups-extended-250-action-groups-in-flight-editing-now-kosremotetech/">Extended Action Groups mod</a> is installed.
             </param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Control.SetActionGroup(System.UInt32,System.Boolean)">
             <summary>
             Sets the state of the given action group.
             </summary>
             <param name="group">
             A number between 0 and 9 inclusive,
             or between 0 and 250 inclusive when the <a href="https://forum.kerbalspaceprogram.com/index.php?/topic/67235-122dec1016-action-groups-extended-250-action-groups-in-flight-editing-now-kosremotetech/">Extended Action Groups mod</a> is installed.
             </param>
             <param name="state"></param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Control.ToggleActionGroup(System.UInt32)">
             <summary>
             Toggles the state of the given action group.
             </summary>
             <param name="group">
             A number between 0 and 9 inclusive,
             or between 0 and 250 inclusive when the <a href="https://forum.kerbalspaceprogram.com/index.php?/topic/67235-122dec1016-action-groups-extended-250-action-groups-in-flight-editing-now-kosremotetech/">Extended Action Groups mod</a> is installed.
             </param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Control.AddNode(System.Double,System.Single,System.Single,System.Single)">
             <summary>
             Creates a maneuver node at the given universal time, and returns a
             <see cref="T:KRPC.SpaceCenter.Services.Node" /> object that can be used to modify it.
             Optionally sets the magnitude of the delta-v for the maneuver node
             in the prograde, normal and radial directions.
             </summary>
             <param name="ut">Universal time of the maneuver node.</param>
             <param name="prograde">Delta-v in the prograde direction.</param>
             <param name="normal">Delta-v in the normal direction.</param>
             <param name="radial">Delta-v in the radial direction.</param>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Control.Nodes">
             <summary>
             Returns a list of all existing maneuver nodes, ordered by time from first to last.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Control.RemoveNodes">
             <summary>
             Remove all maneuver nodes.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.ControlInputMode">
             <summary>
             See <see cref="P:KRPC.SpaceCenter.Services.Control.InputMode" />.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ControlInputMode.Additive">
             <summary>
             Control inputs are added to the vessels current control inputs.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ControlInputMode.Override">
             <summary>
             Control inputs (when they are non-zero) override the vessels current control inputs.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.ControlSource">
             <summary>
             The control source of a vessel.
             See <see cref="P:KRPC.SpaceCenter.Services.Control.Source" />.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ControlSource.Kerbal">
             <summary>
             Vessel is controlled by a Kerbal.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ControlSource.Probe">
             <summary>
             Vessel is controlled by a probe core.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ControlSource.None">
             <summary>
             Vessel is not controlled.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.ControlState">
             <summary>
             The control state of a vessel.
             See <see cref="P:KRPC.SpaceCenter.Services.Control.State" />.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ControlState.Full">
             <summary>
             Full controllable.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ControlState.Partial">
             <summary>
             Partially controllable.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ControlState.None">
             <summary>
             Not controllable.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.CrewMember">
             <summary>
             Represents crew in a vessel. Can be obtained using <see cref="P:KRPC.SpaceCenter.Services.Vessel.Crew" />.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.CrewMember.#ctor(ProtoCrewMember)">
             <summary>
             Construct a crew member from a KSP crew member.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.CrewMember.Equals(KRPC.SpaceCenter.Services.CrewMember)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.CrewMember.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CrewMember.InternalCrewMember">
             <summary>
             The KSP crew member.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CrewMember.Name">
             <summary>
             The crew members name.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CrewMember.Type">
             <summary>
             The type of crew member.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CrewMember.OnMission">
             <summary>
             Whether the crew member is on a mission.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CrewMember.Courage">
             <summary>
             The crew members courage.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CrewMember.Stupidity">
             <summary>
             The crew members stupidity.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CrewMember.Experience">
             <summary>
             The crew members experience.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CrewMember.Badass">
             <summary>
             Whether the crew member is a badass.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.CrewMember.Veteran">
             <summary>
             Whether the crew member is a veteran.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.CrewMemberType">
             <summary>
             The type of a crew member.
             See <see cref="P:KRPC.SpaceCenter.Services.CrewMember.Type" />.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.CrewMemberType.Applicant">
             <summary>
             An applicant for crew.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.CrewMemberType.Crew">
             <summary>
             Rocket crew.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.CrewMemberType.Tourist">
             <summary>
             A tourist.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.CrewMemberType.Unowned">
             <summary>
             An unowned crew member.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Flight">
             <summary>
             Used to get flight telemetry for a vessel, by calling <see cref="M:KRPC.SpaceCenter.Services.Vessel.Flight(KRPC.SpaceCenter.Services.ReferenceFrame)" />.
             All of the information returned by this class is given in the reference frame
             passed to that method.
             Obtained by calling <see cref="M:KRPC.SpaceCenter.Services.Vessel.Flight(KRPC.SpaceCenter.Services.ReferenceFrame)" />.
             </summary>
             <remarks>
             To get orbital information, such as the apoapsis or inclination, see <see cref="T:KRPC.SpaceCenter.Services.Orbit" />.
             </remarks>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Flight.Equals(KRPC.SpaceCenter.Services.Flight)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Flight.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.InternalVessel">
             <summary>
             The KSP vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.WorldVelocity">
             <summary>
             Velocity of the vessel in world space
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.WorldCoM">
             <summary>
             Position of the vessels center of mass in world space
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.WorldDirection">
             <summary>
             Direction the vessel is pointing in in world space
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.VesselRotation">
             <summary>
             Rotation of the vessel in the given reference frame.
             Rotation * Vector3d.up gives the direction vector in which the vessel points, in reference frame space.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.WorldPrograde">
             <summary>
             Orbit prograde direction in world space
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.WorldNormal">
             <summary>
             Orbit normal direction in world space
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.WorldRadial">
             <summary>
             Orbit radial direction in world space
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.WorldPartsLift">
             <summary>
             Sum of the lift forces acting every part, in Newtons.
             Note this is NOT the force in the vessel's lift direction.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.WorldPartsDrag">
             <summary>
             Sum of the drag forces acting on every part, in Newtons.
             Note this is NOT the force in the vessel's drag direction.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.WorldAerodynamicForce">
             <summary>
             Total aerodynamic forces acting on vessel in world space.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.ReferenceArea">
             <summary>
             Reference area used for lift and drag calculations
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.WorldLiftDirection">
             <summary>
             Direction of the lift force acting on the vessel (perpendicular to air stream and up wrt roll angle) in world space.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.LiftMagnitude">
             <summary>
             Magnitude of the lift force acting on the vessel, in Newtons.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.WorldDragDirection">
             <summary>
             Direction of the drag force acting on the vessel (opposite direction to air stream) in world space.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.DragMagnitude">
             <summary>
             Magnitude of the drag force acting on the vessel.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Flight.CheckFAR">
             <summary>
             Check that FAR is installed and that it is active for the vessel
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Flight.CheckNoFAR">
             <summary>
             Check that FAR is not installed
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.GForce">
             <summary>
             The current G force acting on the vessel in <math>g</math>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.MeanAltitude">
             <summary>
             The altitude above sea level, in meters.
             Measured from the center of mass of the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.SurfaceAltitude">
             <summary>
             The altitude above the surface of the body or sea level, whichever is closer, in meters.
             Measured from the center of mass of the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.BedrockAltitude">
             <summary>
             The altitude above the surface of the body, in meters. When over water, this is the altitude above the sea floor.
             Measured from the center of mass of the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.Elevation">
             <summary>
             The elevation of the terrain under the vessel, in meters. This is the height of the terrain above sea level,
             and is negative when the vessel is over the sea.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.Latitude">
             <summary>
             The <a href="https://en.wikipedia.org/wiki/Latitude">latitude</a> of the vessel for the body being orbited, in degrees.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.Longitude">
             <summary>
             The <a href="https://en.wikipedia.org/wiki/Longitude">longitude</a> of the vessel for the body being orbited, in degrees.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.Velocity">
             <summary>
             The velocity of the vessel, in the reference frame <see cref="T:KRPC.SpaceCenter.Services.ReferenceFrame" />.
             </summary>
             <returns>The velocity as a vector. The vector points in the direction of travel,
             and its magnitude is the speed of the vessel in meters per second.</returns>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.Speed">
             <summary>
             The speed of the vessel in meters per second,
             in the reference frame <see cref="T:KRPC.SpaceCenter.Services.ReferenceFrame" />.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.HorizontalSpeed">
             <summary>
             The horizontal speed of the vessel in meters per second,
             in the reference frame <see cref="T:KRPC.SpaceCenter.Services.ReferenceFrame" />.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.VerticalSpeed">
             <summary>
             The vertical speed of the vessel in meters per second,
             in the reference frame <see cref="T:KRPC.SpaceCenter.Services.ReferenceFrame" />.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.CenterOfMass">
             <summary>
             The position of the center of mass of the vessel,
             in the reference frame <see cref="T:KRPC.SpaceCenter.Services.ReferenceFrame" />
             </summary>
             <returns>The position as a vector.</returns>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.Rotation">
             <summary>
             The rotation of the vessel, in the reference frame <see cref="T:KRPC.SpaceCenter.Services.ReferenceFrame" />
             </summary>
             <returns>The rotation as a quaternion of the form <math>(x, y, z, w)</math>.</returns>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.Direction">
             <summary>
             The direction that the vessel is pointing in,
             in the reference frame <see cref="T:KRPC.SpaceCenter.Services.ReferenceFrame" />.
             </summary>
             <returns>The direction as a unit vector.</returns>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.Pitch">
             <summary>
             The pitch of the vessel relative to the horizon, in degrees.
             A value between -90° and +90°.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.Heading">
             <summary>
             The heading of the vessel (its angle relative to north), in degrees.
             A value between 0° and 360°.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.Roll">
             <summary>
             The roll of the vessel relative to the horizon, in degrees.
             A value between -180° and +180°.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.Prograde">
             <summary>
             The prograde direction of the vessels orbit,
             in the reference frame <see cref="T:KRPC.SpaceCenter.Services.ReferenceFrame" />.
             </summary>
             <returns>The direction as a unit vector.</returns>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.Retrograde">
             <summary>
             The retrograde direction of the vessels orbit,
             in the reference frame <see cref="T:KRPC.SpaceCenter.Services.ReferenceFrame" />.
             </summary>
             <returns>The direction as a unit vector.</returns>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.Normal">
             <summary>
             The direction normal to the vessels orbit,
             in the reference frame <see cref="T:KRPC.SpaceCenter.Services.ReferenceFrame" />.
             </summary>
             <returns>The direction as a unit vector.</returns>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.AntiNormal">
             <summary>
             The direction opposite to the normal of the vessels orbit,
             in the reference frame <see cref="T:KRPC.SpaceCenter.Services.ReferenceFrame" />.
             </summary>
             <returns>The direction as a unit vector.</returns>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.Radial">
             <summary>
             The radial direction of the vessels orbit,
             in the reference frame <see cref="T:KRPC.SpaceCenter.Services.ReferenceFrame" />.
             </summary>
             <returns>The direction as a unit vector.</returns>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.AntiRadial">
             <summary>
             The direction opposite to the radial direction of the vessels orbit,
             in the reference frame <see cref="T:KRPC.SpaceCenter.Services.ReferenceFrame" />.
             </summary>
             <returns>The direction as a unit vector.</returns>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.AtmosphereDensity">
             <summary>
             The current density of the atmosphere around the vessel, in <math>kg/m^3</math>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.DynamicPressure">
             <summary>
             The dynamic pressure acting on the vessel, in Pascals. This is a measure of the
             strength of the aerodynamic forces. It is equal to
             <math>\frac{1}{2} . \mbox{air density} . \mbox{velocity}^2</math>.
             It is commonly denoted <math>Q</math>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.StaticPressureAtMSL">
             <summary>
             The static atmospheric pressure at mean sea level, in Pascals.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.StaticPressure">
             <summary>
             The static atmospheric pressure acting on the vessel, in Pascals.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.AerodynamicForce">
             <summary>
             The total aerodynamic forces acting on the vessel,
             in reference frame <see cref="T:KRPC.SpaceCenter.Services.ReferenceFrame" />.
             </summary>
             <returns>A vector pointing in the direction that the force acts,
             with its magnitude equal to the strength of the force in Newtons.</returns>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Flight.SimulateAerodynamicForceAt(KRPC.SpaceCenter.Services.CelestialBody,KRPC.Utils.Tuple{System.Double,System.Double,System.Double},KRPC.Utils.Tuple{System.Double,System.Double,System.Double})">
             <summary>
             Simulate and return the total aerodynamic forces acting on the vessel,
             if it where to be traveling with the given velocity at the given position in the
             atmosphere of the given celestial body.
             </summary>
             <returns>A vector pointing in the direction that the force acts,
             with its magnitude equal to the strength of the force in Newtons.</returns>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.Lift">
             <summary>
             The <a href="https://en.wikipedia.org/wiki/Aerodynamic_force">aerodynamic lift</a>
             currently acting on the vessel.
             </summary>
             <returns>A vector pointing in the direction that the force acts,
             with its magnitude equal to the strength of the force in Newtons.</returns>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.Drag">
             <summary>
             The <a href="https://en.wikipedia.org/wiki/Aerodynamic_force">aerodynamic drag</a> currently acting on the vessel.
             </summary>
             <returns>A vector pointing in the direction of the force, with its magnitude
             equal to the strength of the force in Newtons.</returns>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.SpeedOfSound">
             <summary>
             The speed of sound, in the atmosphere around the vessel, in <math>m/s</math>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.Mach">
             <summary>
             The speed of the vessel, in multiples of the speed of sound.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.ReynoldsNumber">
             <summary>
             The vessels Reynolds number.
             </summary>
             <remarks>
             Requires <a href="https://forum.kerbalspaceprogram.com/index.php?/topic/19321-130-ferram-aerospace-research-v0159-liebe-82117/">Ferram Aerospace Research</a>.
             </remarks>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.TrueAirSpeed">
             <summary>
             The <a href="https://en.wikipedia.org/wiki/True_airspeed">true air speed</a>
             of the vessel, in meters per second.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.EquivalentAirSpeed">
             <summary>
             The <a href="https://en.wikipedia.org/wiki/Equivalent_airspeed">equivalent air speed</a>
             of the vessel, in meters per second.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.TerminalVelocity">
             <summary>
             An estimate of the current terminal velocity of the vessel, in meters per second.
             This is the speed at which the drag forces cancel out the force of gravity.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.AngleOfAttack">
             <summary>
             The pitch angle between the orientation of the vessel and its velocity vector,
             in degrees.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.SideslipAngle">
             <summary>
             The yaw angle between the orientation of the vessel and its velocity vector, in degrees.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.TotalAirTemperature">
             <summary>
             The <a href="https://en.wikipedia.org/wiki/Total_air_temperature">total air temperature</a>
             of the atmosphere around the vessel, in Kelvin.
             This includes the <see cref="P:KRPC.SpaceCenter.Services.Flight.StaticAirTemperature" /> and the vessel's kinetic energy.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.StaticAirTemperature">
             <summary>
             The <a href="https://en.wikipedia.org/wiki/Total_air_temperature">static (ambient)
             temperature</a> of the atmosphere around the vessel, in Kelvin.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.StallFraction">
             <summary>
             The current amount of stall, between 0 and 1. A value greater than 0.005 indicates
             a minor stall and a value greater than 0.5 indicates a large-scale stall.
             </summary>
             <remarks>
             Requires <a href="https://forum.kerbalspaceprogram.com/index.php?/topic/19321-130-ferram-aerospace-research-v0159-liebe-82117/">Ferram Aerospace Research</a>.
             </remarks>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.DragCoefficient">
             <summary>
             The coefficient of drag. This is the amount of drag produced by the vessel.
             It depends on air speed, air density and wing area.
             </summary>
             <remarks>
             Requires <a href="https://forum.kerbalspaceprogram.com/index.php?/topic/19321-130-ferram-aerospace-research-v0159-liebe-82117/">Ferram Aerospace Research</a>.
             </remarks>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.LiftCoefficient">
             <summary>
             The coefficient of lift. This is the amount of lift produced by the vessel, and
             depends on air speed, air density and wing area.
             </summary>
             <remarks>
             Requires <a href="https://forum.kerbalspaceprogram.com/index.php?/topic/19321-130-ferram-aerospace-research-v0159-liebe-82117/">Ferram Aerospace Research</a>.
             </remarks>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.BallisticCoefficient">
             <summary>
             The <a href="https://en.wikipedia.org/wiki/Ballistic_coefficient">ballistic coefficient</a>.
             </summary>
             <remarks>
             Requires <a href="https://forum.kerbalspaceprogram.com/index.php?/topic/19321-130-ferram-aerospace-research-v0159-liebe-82117/">Ferram Aerospace Research</a>.
             </remarks>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Flight.ThrustSpecificFuelConsumption">
             <summary>
             The thrust specific fuel consumption for the jet engines on the vessel. This is a
             measure of the efficiency of the engines, with a lower value indicating a more
             efficient vessel. This value is the number of Newtons of fuel that are burned,
             per hour, to produce one newton of thrust.
             </summary>
             <remarks>
             Requires <a href="https://forum.kerbalspaceprogram.com/index.php?/topic/19321-130-ferram-aerospace-research-v0159-liebe-82117/">Ferram Aerospace Research</a>.
             </remarks>
            </member>
        <member name="T:KRPC.SpaceCenter.GameMode">
             <summary>
             The game mode.
             Returned by <see cref="T:KRPC.SpaceCenter.GameMode" />
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.GameMode.Sandbox">
             <summary>
             Sandbox mode.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.GameMode.Career">
             <summary>
             Career mode.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.GameMode.Science">
             <summary>
             Science career mode.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.GameMode.ScienceSandbox">
             <summary>
             Science sandbox mode.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.GameMode.Mission">
             <summary>
             Mission mode.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.GameMode.MissionBuilder">
             <summary>
             Mission builder mode.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.GameMode.Scenario">
             <summary>
             Scenario mode.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.GameMode.ScenarioNonResumable">
             <summary>
             Scenario mode that cannot be resumed.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Node">
             <summary>
             Represents a maneuver node. Can be created using <see cref="M:KRPC.SpaceCenter.Services.Control.AddNode(System.Double,System.Single,System.Single,System.Single)" />.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Node.vesselId">
             Note: Maneuver node delta-v vectors use a special coordinate system.
             The z-component is the prograde component.
             The y-component is the normal component.
             The x-component is the radial component.
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Node.#ctor(Vessel,ManeuverNode)">
             <summary>
             Construct a node from a KSP node.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Node.Equals(KRPC.SpaceCenter.Services.Node)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Node.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Node.InternalVessel">
             <summary>
             The KSP vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Node.InternalNode">
             <summary>
             The KSP node.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Node.Prograde">
             <summary>
             The magnitude of the maneuver nodes delta-v in the prograde direction,
             in meters per second.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Node.Normal">
             <summary>
             The magnitude of the maneuver nodes delta-v in the normal direction,
             in meters per second.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Node.Radial">
             <summary>
             The magnitude of the maneuver nodes delta-v in the radial direction,
             in meters per second.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Node.DeltaV">
             <summary>
             The delta-v of the maneuver node, in meters per second.
             </summary>
             <remarks>
             Does not change when executing the maneuver node. See <see cref="P:KRPC.SpaceCenter.Services.Node.RemainingDeltaV" />.
             </remarks>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Node.RemainingDeltaV">
             <summary>
             Gets the remaining delta-v of the maneuver node, in meters per second. Changes as the
             node is executed. This is equivalent to the delta-v reported in-game.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Node.BurnVector(KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             Returns the burn vector for the maneuver node.
             </summary>
             <param name="referenceFrame">The reference frame that the returned vector is in.
             Defaults to <see cref="P:KRPC.SpaceCenter.Services.Vessel.OrbitalReferenceFrame" />.</param>
             <returns>A vector whose direction is the direction of the maneuver node burn, and
             magnitude is the delta-v of the burn in meters per second.
             </returns>
             <remarks>
             Does not change when executing the maneuver node. See <see cref="M:KRPC.SpaceCenter.Services.Node.RemainingBurnVector(KRPC.SpaceCenter.Services.ReferenceFrame)" />.
             </remarks>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Node.RemainingBurnVector(KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             Returns the remaining burn vector for the maneuver node.
             </summary>
             <param name="referenceFrame">The reference frame that the returned vector is in.
             Defaults to <see cref="P:KRPC.SpaceCenter.Services.Vessel.OrbitalReferenceFrame" />.</param>
             <returns>A vector whose direction is the direction of the maneuver node burn, and
             magnitude is the delta-v of the burn in meters per second.
             </returns>
             <remarks>
             Changes as the maneuver node is executed. See <see cref="M:KRPC.SpaceCenter.Services.Node.BurnVector(KRPC.SpaceCenter.Services.ReferenceFrame)" />.
             </remarks>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Node.UT">
             <summary>
             The universal time at which the maneuver will occur, in seconds.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Node.TimeTo">
             <summary>
             The time until the maneuver node will be encountered, in seconds.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Node.Orbit">
             <summary>
             The orbit that results from executing the maneuver node.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Node.Remove">
             <summary>
             Removes the maneuver node.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Node.ReferenceFrame">
             <summary>
             The reference frame that is fixed relative to the maneuver node's burn.
             <list type="bullet">
             <item><description>The origin is at the position of the maneuver node.</description></item>
             <item><description>The y-axis points in the direction of the burn.</description></item>
             <item><description>The x-axis and z-axis point in arbitrary but fixed directions.</description></item>
             </list>
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Node.OrbitalReferenceFrame">
             <summary>
             The reference frame that is fixed relative to the maneuver node, and
             orientated with the orbital prograde/normal/radial directions of the
             original orbit at the maneuver node's position.
             <list type="bullet">
             <item><description>The origin is at the position of the maneuver node.</description></item>
             <item><description>The x-axis points in the orbital anti-radial direction of the original
             orbit, at the position of the maneuver node.</description></item>
             <item><description>The y-axis points in the orbital prograde direction of the original
             orbit, at the position of the maneuver node.</description></item>
             <item><description>The z-axis points in the orbital normal direction of the original orbit,
             at the position of the maneuver node.</description></item>
             </list>
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Node.Position(KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The position vector of the maneuver node in the given reference frame.
             </summary>
             <returns>The position as a vector.</returns>
             <param name="referenceFrame">The reference frame that the returned
             position vector is in.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Node.Direction(KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The direction of the maneuver nodes burn.
             </summary>
             <returns>The direction as a unit vector.</returns>
             <param name="referenceFrame">The reference frame that the returned
             direction is in.</param>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Orbit">
             <summary>
             Describes an orbit. For example, the orbit of a vessel, obtained by calling
             <see cref="P:KRPC.SpaceCenter.Services.Vessel.Orbit" />, or a celestial body, obtained by calling
             <see cref="P:KRPC.SpaceCenter.Services.CelestialBody.Orbit" />.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Orbit.#ctor(Orbit)">
             <summary>
             Construct a an orbit from a KSP orbit object.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Orbit.Equals(KRPC.SpaceCenter.Services.Orbit)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Orbit.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Orbit.InternalOrbit">
             <summary>
             The KSP orbit object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Orbit.Body">
             <summary>
             The celestial body (e.g. planet or moon) around which the object is orbiting.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Orbit.Apoapsis">
             <summary>
             Gets the apoapsis of the orbit, in meters, from the center of mass
             of the body being orbited.
             </summary>
             <remarks>
             For the apoapsis altitude reported on the in-game map view,
             use <see cref="P:KRPC.SpaceCenter.Services.Orbit.ApoapsisAltitude" />.
             </remarks>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Orbit.Periapsis">
             <summary>
             The periapsis of the orbit, in meters, from the center of mass
             of the body being orbited.
             </summary>
             <remarks>
             For the periapsis altitude reported on the in-game map view,
             use <see cref="P:KRPC.SpaceCenter.Services.Orbit.PeriapsisAltitude" />.
             </remarks>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Orbit.ApoapsisAltitude">
             <summary>
             The apoapsis of the orbit, in meters, above the sea level of the body being orbited.
             </summary>
             <remarks>
             This is equal to <see cref="P:KRPC.SpaceCenter.Services.Orbit.Apoapsis" /> minus the equatorial radius of the body.
             </remarks>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Orbit.PeriapsisAltitude">
             <summary>
             The periapsis of the orbit, in meters, above the sea level of the body being orbited.
             </summary>
             <remarks>
             This is equal to <see cref="P:KRPC.SpaceCenter.Services.Orbit.Periapsis" /> minus the equatorial radius of the body.
             </remarks>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Orbit.SemiMajorAxis">
             <summary>
             The semi-major axis of the orbit, in meters.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Orbit.SemiMinorAxis">
             <summary>
             The semi-minor axis of the orbit, in meters.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Orbit.Radius">
             <summary>
             The current radius of the orbit, in meters. This is the distance between the center
             of mass of the object in orbit, and the center of mass of the body around which it
             is orbiting.
             </summary>
             <remarks>
             This value will change over time if the orbit is elliptical.
             </remarks>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Orbit.Speed">
             <summary>
             The current orbital speed of the object in meters per second.
             </summary>
             <remarks>
             This value will change over time if the orbit is elliptical.
             </remarks>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Orbit.Period">
             <summary>
             The orbital period, in seconds.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Orbit.TimeToApoapsis">
             <summary>
             The time until the object reaches apoapsis, in seconds.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Orbit.TimeToPeriapsis">
             <summary>
             The time until the object reaches periapsis, in seconds.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Orbit.Eccentricity">
             <summary>
             The <a href="https://en.wikipedia.org/wiki/Orbital_eccentricity">eccentricity</a>
             of the orbit.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Orbit.Inclination">
             <summary>
             The <a href="https://en.wikipedia.org/wiki/Orbital_inclination">inclination</a>
             of the orbit,
             in radians.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Orbit.LongitudeOfAscendingNode">
             <summary>
             The <a href="https://en.wikipedia.org/wiki/Longitude_of_the_ascending_node">longitude of
             the ascending node</a>, in radians.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Orbit.ArgumentOfPeriapsis">
             <summary>
             The <a href="https://en.wikipedia.org/wiki/Argument_of_periapsis">argument of
             periapsis</a>, in radians.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Orbit.MeanAnomalyAtEpoch">
             <summary>
             The <a href="https://en.wikipedia.org/wiki/Mean_anomaly">mean anomaly at epoch</a>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Orbit.Epoch">
             <summary>
             The time since the epoch (the point at which the
             <a href="https://en.wikipedia.org/wiki/Mean_anomaly">mean anomaly at epoch</a>
             was measured, in seconds.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Orbit.MeanAnomaly">
             <summary>
             The <a href="https://en.wikipedia.org/wiki/Mean_anomaly">mean anomaly</a>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Orbit.EccentricAnomaly">
             <summary>
             The <a href="https://en.wikipedia.org/wiki/Eccentric_anomaly">eccentric anomaly</a>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Orbit.TrueAnomaly">
             <summary>
             The <a href="https://en.wikipedia.org/wiki/True_anomaly">true anomaly</a>.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Orbit.ReferencePlaneNormal(KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The direction that is normal to the orbits reference plane,
             in the given reference frame.
             The reference plane is the plane from which the orbits inclination is measured.
             </summary>
             <returns>The direction as a unit vector.</returns>
             <param name="referenceFrame">The reference frame that the returned
             direction is in.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Orbit.ReferencePlaneDirection(KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The direction from which the orbits longitude of ascending node is measured,
             in the given reference frame.
             </summary>
             <returns>The direction as a unit vector.</returns>
             <param name="referenceFrame">The reference frame that the returned
             direction is in.</param>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Orbit.NextOrbit">
             <summary>
             If the object is going to change sphere of influence in the future, returns the new
             orbit after the change. Otherwise returns <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Orbit.TimeToSOIChange">
             <summary>
             The time until the object changes sphere of influence, in seconds. Returns <c>NaN</c>
             if the object is not going to change sphere of influence.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Orbit.MeanAnomalyAtUT(System.Double)">
             <summary>
             The mean anomaly at the given time.
             </summary>
             <param name="ut">The universal time in seconds.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Orbit.RadiusAtTrueAnomaly(System.Double)">
             <summary>
             The orbital radius at the point in the orbit given by the true anomaly.
             </summary>
             <param name="trueAnomaly">The true anomaly.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Orbit.TrueAnomalyAtRadius(System.Double)">
             <summary>
             The true anomaly at the given orbital radius.
             </summary>
             <param name="radius">The orbital radius in meters.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Orbit.TrueAnomalyAtUT(System.Double)">
             <summary>
             The true anomaly at the given time.
             </summary>
             <param name="ut">The universal time in seconds.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Orbit.UTAtTrueAnomaly(System.Double)">
             <summary>
             The universal time, in seconds, corresponding to the given true anomaly.
             </summary>
             <param name="trueAnomaly">True anomaly.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Orbit.EccentricAnomalyAtUT(System.Double)">
             <summary>
             The eccentric anomaly at the given universal time.
             </summary>
             <param name="ut">The universal time, in seconds.</param>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Orbit.OrbitalSpeed">
             <summary>
             The current orbital speed in meters per second.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Orbit.OrbitalSpeedAt(System.Double)">
             <summary>
             The orbital speed at the given time, in meters per second.
             </summary>
             <param name="time">Time from now, in seconds.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Orbit.RadiusAt(System.Double)">
             <summary>
             The orbital radius at the given time, in meters.
             </summary>
             <param name="ut">The universal time to measure the radius at.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Orbit.PositionAt(System.Double,KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The position at a given time, in the specified reference frame.
             </summary>
             <returns>The position as a vector.</returns>
             <param name="ut">The universal time to measure the position at.</param>
             <param name="referenceFrame">The reference frame that the returned
             position vector is in.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Orbit.TimeOfClosestApproach(KRPC.SpaceCenter.Services.Orbit)">
             <summary>
             Estimates and returns the time at closest approach to a target orbit.
             </summary>
             <returns>The universal time at closest approach, in seconds.</returns>
             <param name="target">Target orbit.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Orbit.DistanceAtClosestApproach(KRPC.SpaceCenter.Services.Orbit)">
             <summary>
             Estimates and returns the distance at closest approach to a target orbit, in meters.
             </summary>
             <param name="target">Target orbit.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Orbit.ListClosestApproaches(KRPC.SpaceCenter.Services.Orbit,System.Int32)">
             <summary>
             Returns the times at closest approach and corresponding distances, to a target orbit.
             </summary>
             <returns>
             A list of two lists.
             The first is a list of times at closest approach, as universal times in seconds.
             The second is a list of corresponding distances at closest approach, in meters.
             </returns>
             <param name="target">Target orbit.</param>
             <param name="orbits">The number of future orbits to search.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Orbit.CalcClosestAproach(KRPC.SpaceCenter.Services.Orbit,KRPC.SpaceCenter.Services.Orbit,System.Double,System.Double@)">
             <summary>
             Helper function to calculate the closest approach distance and time to a target orbit
             in a given orbital period.
             </summary>
             <param name="myOrbit">Orbit of the controlled vessel.</param>
             <param name="targetOrbit">Orbit of the target.</param>
             <param name="beginTime">Time to begin search, which continues for
             one orbital period from this time.</param>
             <param name="distance">The distance at the closest approach, in meters.</param>
             <returns>The universal time at closest approach, in seconds.</returns>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Orbit.TrueAnomalyAtAN(KRPC.SpaceCenter.Services.Orbit)">
             <summary>
             The true anomaly of the ascending node with the given target orbit.
             </summary>
             <param name="target">Target orbit.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Orbit.TrueAnomalyAtDN(KRPC.SpaceCenter.Services.Orbit)">
             <summary>
             The true anomaly of the descending node with the given target orbit.
             </summary>
             <param name="target">Target orbit.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Orbit.RelativeInclination(KRPC.SpaceCenter.Services.Orbit)">
             <summary>
             Relative inclination of this orbit and the target orbit, in radians.
             </summary>
             <param name="target">Target orbit.</param>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.Antenna">
             <summary>
             An antenna. Obtained by calling <see cref="P:KRPC.SpaceCenter.Services.Parts.Part.Antenna" />.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Antenna.Equals(KRPC.SpaceCenter.Services.Parts.Antenna)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Antenna.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Antenna.Part">
             <summary>
             The part object for this antenna.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Antenna.State">
             <summary>
             The current state of the antenna.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Antenna.Deployable">
             <summary>
             Whether the antenna is deployable.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Antenna.Deployed">
             <summary>
             Whether the antenna is deployed.
             </summary>
             <remarks>
             Fixed antennas are always deployed.
             Returns an error if you try to deploy a fixed antenna.
             </remarks>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Antenna.CanTransmit">
             <summary>
             Whether data can be transmitted by this antenna.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Antenna.Transmit">
             <summary>
             Transmit data.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Antenna.Cancel">
             <summary>
             Cancel current transmission of data.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Antenna.AllowPartial">
             <summary>
             Whether partial data transmission is permitted.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Antenna.Power">
             <summary>
             The power of the antenna.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Antenna.Combinable">
             <summary>
             Whether the antenna can be combined with other antennae on the vessel
             to boost the power.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Antenna.CombinableExponent">
             <summary>
             Exponent used to calculate the combined power of multiple antennae on a vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Antenna.PacketInterval">
             <summary>
             Interval between sending packets in seconds.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Antenna.PacketSize">
             <summary>
             Amount of data sent per packet in Mits.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Antenna.PacketResourceCost">
             <summary>
             Units of electric charge consumed per packet sent.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.AntennaState">
             <summary>
             The state of an antenna. See <see cref="P:KRPC.SpaceCenter.Services.Parts.Antenna.State" />.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.AntennaState.Deployed">
             <summary>
             Antenna is fully deployed.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.AntennaState.Retracted">
             <summary>
             Antenna is fully retracted.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.AntennaState.Deploying">
             <summary>
             Antenna is being deployed.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.AntennaState.Retracting">
             <summary>
             Antenna is being retracted.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.AntennaState.Broken">
             <summary>
             Antenna is broken.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.CargoBay">
             <summary>
             A cargo bay. Obtained by calling <see cref="P:KRPC.SpaceCenter.Services.Parts.Part.CargoBay" />.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.CargoBay.Equals(KRPC.SpaceCenter.Services.Parts.CargoBay)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.CargoBay.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.CargoBay.Part">
             <summary>
             The part object for this cargo bay.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.CargoBay.State">
             <summary>
             The state of the cargo bay.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.CargoBay.Open">
             <summary>
             Whether the cargo bay is open.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.CargoBayState">
             <summary>
             The state of a cargo bay. See <see cref="P:KRPC.SpaceCenter.Services.Parts.CargoBay.State" />.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.CargoBayState.Open">
             <summary>
             Cargo bay is fully open.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.CargoBayState.Closed">
             <summary>
             Cargo bay closed and locked.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.CargoBayState.Opening">
             <summary>
             Cargo bay is opening.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.CargoBayState.Closing">
             <summary>
             Cargo bay is closing.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.ControlSurface">
             <summary>
             An aerodynamic control surface. Obtained by calling <see cref="P:KRPC.SpaceCenter.Services.Parts.Part.ControlSurface" />.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.ControlSurface.Equals(KRPC.SpaceCenter.Services.Parts.ControlSurface)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.ControlSurface.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ControlSurface.Part">
             <summary>
             The part object for this control surface.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ControlSurface.PitchEnabled">
             <summary>
             Whether the control surface has pitch control enabled.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ControlSurface.YawEnabled">
             <summary>
             Whether the control surface has yaw control enabled.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ControlSurface.RollEnabled">
             <summary>
             Whether the control surface has roll control enabled.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ControlSurface.AuthorityLimiter">
             <summary>
             The authority limiter for the control surface, which controls how far the
             control surface will move.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ControlSurface.Inverted">
             <summary>
             Whether the control surface movement is inverted.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ControlSurface.Deployed">
             <summary>
             Whether the control surface has been fully deployed.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ControlSurface.SurfaceArea">
             <summary>
             Surface area of the control surface in <math>m^2</math>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ControlSurface.AvailableTorque">
             <summary>
             The available torque, in Newton meters, that can be produced by this control surface,
             in the positive and negative pitch, roll and yaw axes of the vessel. These axes
             correspond to the coordinate axes of the <see cref="P:KRPC.SpaceCenter.Services.Vessel.ReferenceFrame" />.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.Decoupler">
             <summary>
             A decoupler. Obtained by calling <see cref="P:KRPC.SpaceCenter.Services.Parts.Part.Decoupler" />
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Decoupler.Equals(KRPC.SpaceCenter.Services.Parts.Decoupler)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Decoupler.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Decoupler.Part">
             <summary>
             The part object for this decoupler.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Decoupler.Decouple">
             <summary>
             Fires the decoupler. Returns the new vessel created when the decoupler fires.
             Throws an exception if the decoupler has already fired.
             </summary>
             <remarks>
             When called, the active vessel may change. It is therefore possible that,
             after calling this function, the object(s) returned by previous call(s) to
             <see cref="P:KRPC.SpaceCenter.Services.SpaceCenter.ActiveVessel" /> no longer refer to the active vessel.
             </remarks>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Decoupler.Decoupled">
             <summary>
             Whether the decoupler has fired.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Decoupler.Staged">
             <summary>
             Whether the decoupler is enabled in the staging sequence.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Decoupler.Impulse">
             <summary>
             The impulse that the decoupler imparts when it is fired, in Newton seconds.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.DockingPort">
             <summary>
             A docking port. Obtained by calling <see cref="P:KRPC.SpaceCenter.Services.Parts.Part.DockingPort" />
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.DockingPort.Equals(KRPC.SpaceCenter.Services.Parts.DockingPort)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.DockingPort.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.DockingPort.InternalPort">
             <summary>
             The KSP docking node object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.DockingPort.Part">
             <summary>
             The part object for this docking port.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.DockingPort.State">
             <summary>
             The current state of the docking port.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.DockingPort.DockedPart">
             <summary>
             The part that this docking port is docked to. Returns <c>null</c> if this
             docking port is not docked to anything.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.DockingPort.Undock">
             <summary>
             Undocks the docking port and returns the new <see cref="T:KRPC.SpaceCenter.Services.Vessel" /> that is created.
             This method can be called for either docking port in a docked pair.
             Throws an exception if the docking port is not docked to anything.
             </summary>
             <remarks>
             When called, the active vessel may change. It is therefore possible that,
             after calling this function, the object(s) returned by previous call(s) to
             <see cref="P:KRPC.SpaceCenter.Services.SpaceCenter.ActiveVessel" /> no longer refer to the active vessel.
             </remarks>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.DockingPort.ReengageDistance">
             <summary>
             The distance a docking port must move away when it undocks before it
             becomes ready to dock with another port, in meters.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.DockingPort.HasShield">
             <summary>
             Whether the docking port has a shield.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.DockingPort.Shielded">
             <summary>
             The state of the docking ports shield, if it has one.
            
             Returns <c>true</c> if the docking port has a shield, and the shield is
             closed. Otherwise returns <c>false</c>. When set to <c>true</c>, the shield is
             closed, and when set to <c>false</c> the shield is opened. If the docking
             port does not have a shield, setting this attribute has no effect.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.DockingPort.Position(KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The position of the docking port, in the given reference frame.
             </summary>
             <returns>The position as a vector.</returns>
             <param name="referenceFrame">The reference frame that the returned
             position vector is in.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.DockingPort.Direction(KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The direction that docking port points in, in the given reference frame.
             </summary>
             <returns>The direction as a unit vector.</returns>
             <param name="referenceFrame">The reference frame that the returned
             direction is in.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.DockingPort.Rotation(KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The rotation of the docking port, in the given reference frame.
             </summary>
             <returns>The rotation as a quaternion of the form <math>(x, y, z, w)</math>.</returns>
             <param name="referenceFrame">The reference frame that the returned
             rotation is in.</param>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.DockingPort.ReferenceFrame">
             <summary>
             The reference frame that is fixed relative to this docking port, and
             oriented with the port.
             <list type="bullet">
             <item><description>The origin is at the position of the docking port.
             </description></item>
             <item><description>The axes rotate with the docking port.</description></item>
             <item><description>The x-axis points out to the right side of the docking port.
             </description></item>
             <item><description>The y-axis points in the direction the docking port is facing.
             </description></item>
             <item><description>The z-axis points out of the bottom off the docking port.
             </description></item>
             </list>
             </summary>
             <remarks>
             This reference frame is not necessarily equivalent to the reference frame
             for the part, returned by <see cref="P:KRPC.SpaceCenter.Services.Parts.Part.ReferenceFrame" />.
             </remarks>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.DockingPort.GetDockedPart">
             <summary>
             Gets the part docked to this port, if any. Returns null if there is nothing docked.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.DockingPort.PointsTowards(Part)">
             <summary>
             Returns true if this docking port points towards the given part
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.DockingPort.IndividualState(ModuleDockingNode)">
             <summary>
             Gets the state of a docking port. Does not consider the state of
             an attached docking port.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.DockingPort.InvokeEvent(PartModule,System.String)">
             <summary>
             Try invoking a named event for a docking port. Returns true if an event is found
             and invoked.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.DockingPortState">
             <summary>
             The state of a docking port. See <see cref="P:KRPC.SpaceCenter.Services.Parts.DockingPort.State" />.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.DockingPortState.Ready">
             <summary>
             The docking port is ready to dock to another docking port.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.DockingPortState.Docked">
             <summary>
             The docking port is docked to another docking port, or docked to
             another part (from the VAB/SPH).
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.DockingPortState.Docking">
             <summary>
             The docking port is very close to another docking port,
             but has not docked. It is using magnetic force to acquire a solid dock.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.DockingPortState.Undocking">
             <summary>
             The docking port has just been undocked from another docking port,
             and is disabled until it moves away by a sufficient distance
             (<see cref="P:KRPC.SpaceCenter.Services.Parts.DockingPort.ReengageDistance" />).
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.DockingPortState.Shielded">
             <summary>
             The docking port has a shield, and the shield is closed.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.DockingPortState.Moving">
             <summary>
             The docking ports shield is currently opening/closing.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.Engine">
             <summary>
             An engine, including ones of various types.
             For example liquid fuelled gimballed engines, solid rocket boosters and jet engines.
             Obtained by calling <see cref="P:KRPC.SpaceCenter.Services.Parts.Part.Engine" />.
             </summary>
             <remarks>
             For RCS thrusters <see cref="P:KRPC.SpaceCenter.Services.Parts.Part.RCS" />.
             </remarks>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Engine.Equals(KRPC.SpaceCenter.Services.Parts.Engine)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Engine.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Engine.CurrentEngine">
             <summary>
             Get the currently active ModuleEngines part module. For a single-mode engine,
             this is just the ModulesEngine for the part. For multi-mode engines, this is
             the ModulesEngine for the current mode.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Engine.Part">
             <summary>
             The part object for this engine.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Engine.Active">
             <summary>
             Whether the engine is active. Setting this attribute may have no effect,
             depending on <see cref="P:KRPC.SpaceCenter.Services.Parts.Engine.CanShutdown" /> and <see cref="P:KRPC.SpaceCenter.Services.Parts.Engine.CanRestart" />.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Engine.GetThrust(System.Single,System.Double)">
             <summary>
             Get the thrust of the engine in Newtons, with the given throttle percentage
             and atmospheric pressure in atmospheres.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Engine.Thrust">
             <summary>
             The current amount of thrust being produced by the engine, in Newtons.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Engine.AvailableThrust">
             <summary>
             The amount of thrust, in Newtons, that would be produced by the engine
             when activated and with its throttle set to 100%.
             Returns zero if the engine does not have any fuel.
             Takes the engine's current <see cref="P:KRPC.SpaceCenter.Services.Parts.Engine.ThrustLimit" /> and atmospheric conditions
             into account.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Engine.MaxThrust">
             <summary>
             The amount of thrust, in Newtons, that would be produced by the engine
             when activated and fueled, with its throttle and throttle limiter set to 100%.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Engine.MaxVacuumThrust">
             <summary>
             The maximum amount of thrust that can be produced by the engine in a
             vacuum, in Newtons. This is the amount of thrust produced by the engine
             when activated, <see cref="P:KRPC.SpaceCenter.Services.Parts.Engine.ThrustLimit" /> is set to 100%, the main
             vessel's throttle is set to 100% and the engine is in a vacuum.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Engine.ThrustLimit">
             <summary>
             The thrust limiter of the engine. A value between 0 and 1. Setting this
             attribute may have no effect, for example the thrust limit for a solid
             rocket booster cannot be changed in flight.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Engine.Thrusters">
             <summary>
             The components of the engine that generate thrust.
             </summary>
             <remarks>
             For example, this corresponds to the rocket nozzel on a solid rocket booster,
             or the individual nozzels on a RAPIER engine.
             The overall thrust produced by the engine, as reported by <see cref="P:KRPC.SpaceCenter.Services.Parts.Engine.AvailableThrust" />,
             <see cref="P:KRPC.SpaceCenter.Services.Parts.Engine.MaxThrust" /> and others, is the sum of the thrust generated by each thruster.
             </remarks>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Engine.SpecificImpulse">
             <summary>
             The current specific impulse of the engine, in seconds. Returns zero
             if the engine is not active.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Engine.VacuumSpecificImpulse">
             <summary>
             The vacuum specific impulse of the engine, in seconds.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Engine.KerbinSeaLevelSpecificImpulse">
             <summary>
             The specific impulse of the engine at sea level on Kerbin, in seconds.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Engine.PropellantNames">
             <summary>
             The names of the propellants that the engine consumes.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Engine.Propellants">
             <summary>
             The propellants that the engine consumes.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Engine.PropellantRatios">
             <summary>
             The ratio of resources that the engine consumes. A dictionary mapping resource names
             to the ratio at which they are consumed by the engine.
             </summary>
             <remarks>
             For example, if the ratios are 0.6 for LiquidFuel and 0.4 for Oxidizer, then for every
             0.6 units of LiquidFuel that the engine burns, it will burn 0.4 units of Oxidizer.
             </remarks>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Engine.HasFuel">
             <summary>
             Whether the engine has any fuel available.
             </summary>
             <remarks>
             The engine must be activated for this property to update correctly.
             </remarks>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Engine.Throttle">
             <summary>
             The current throttle setting for the engine. A value between 0 and 1.
             This is not necessarily the same as the vessel's main throttle
             setting, as some engines take time to adjust their throttle
             (such as jet engines).
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Engine.ThrottleLocked">
             <summary>
             Whether the <see cref="P:KRPC.SpaceCenter.Services.Control.Throttle" /> affects the engine. For example,
             this is <c>true</c> for liquid fueled rockets, and <c>false</c> for solid rocket
             boosters.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Engine.CanRestart">
             <summary>
             Whether the engine can be restarted once shutdown. If the engine cannot be shutdown,
             returns <c>false</c>. For example, this is <c>true</c> for liquid fueled rockets
             and <c>false</c> for solid rocket boosters.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Engine.CanShutdown">
             <summary>
             Whether the engine can be shutdown once activated. For example, this is
             <c>true</c> for liquid fueled rockets and <c>false</c> for solid rocket boosters.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Engine.HasModes">
             <summary>
             Whether the engine has multiple modes of operation.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Engine.Mode">
             <summary>
             The name of the current engine mode.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Engine.Modes">
             <summary>
             The available modes for the engine.
             A dictionary mapping mode names to <see cref="T:KRPC.SpaceCenter.Services.Parts.Engine" /> objects.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Engine.ToggleMode">
             <summary>
             Toggle the current engine mode.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Engine.AutoModeSwitch">
             <summary>
             Whether the engine will automatically switch modes.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Engine.Gimballed">
             <summary>
             Whether the engine is gimballed.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Engine.GimbalRange">
             <summary>
             The range over which the gimbal can move, in degrees.
             Returns 0 if the engine is not gimballed.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Engine.GimbalLocked">
             <summary>
             Whether the engines gimbal is locked in place. Setting this attribute has
             no effect if the engine is not gimballed.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Engine.GimbalLimit">
             <summary>
             The gimbal limiter of the engine. A value between 0 and 1.
             Returns 0 if the gimbal is locked.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Engine.AvailableTorque">
             <summary>
             The available torque, in Newton meters, that can be produced by this engine,
             in the positive and negative pitch, roll and yaw axes of the vessel. These axes
             correspond to the coordinate axes of the <see cref="P:KRPC.SpaceCenter.Services.Vessel.ReferenceFrame" />.
             Returns zero if the engine is inactive, or not gimballed.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.Experiment">
             <summary>
             Obtained by calling <see cref="P:KRPC.SpaceCenter.Services.Parts.Part.Experiment" />.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Experiment.Equals(KRPC.SpaceCenter.Services.Parts.Experiment)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Experiment.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Experiment.Part">
             <summary>
             The part object for this experiment.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Experiment.Run">
             <summary>
             Run the experiment.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Experiment.Transmit">
             <summary>
             Transmit all experimental data contained by this part.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Experiment.Dump">
             <summary>
             Dump the experimental data contained by the experiment.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Experiment.Reset">
             <summary>
             Reset the experiment.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Experiment.Inoperable">
             <summary>
             Whether the experiment is inoperable.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Experiment.Deployed">
             <summary>
             Whether the experiment has been deployed.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Experiment.Rerunnable">
             <summary>
             Whether the experiment can be re-run.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Experiment.HasData">
             <summary>
             Whether the experiment contains data.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Experiment.Data">
             <summary>
             The data contained in this experiment.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Experiment.Available">
             <summary>
             Determines if the experiment is available given the current conditions.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Experiment.Biome">
             <summary>
             The name of the biome the experiment is currently in.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Experiment.ScienceSubject">
             <summary>
             Containing information on the corresponding specific science result for the current
             conditions. Returns <c>null</c> if the experiment is unavailable.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.Fairing">
             <summary>
             A fairing. Obtained by calling <see cref="P:KRPC.SpaceCenter.Services.Parts.Part.Fairing" />.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Fairing.Equals(KRPC.SpaceCenter.Services.Parts.Fairing)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Fairing.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Fairing.Part">
             <summary>
             The part object for this fairing.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Fairing.Jettison">
             <summary>
             Jettison the fairing. Has no effect if it has already been jettisoned.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Fairing.Jettisoned">
             <summary>
             Whether the fairing has been jettisoned.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.Force">
             <summary>
             Obtained by calling <see cref="M:KRPC.SpaceCenter.Services.Parts.Part.AddForce(KRPC.Utils.Tuple{System.Double,System.Double,System.Double},KRPC.Utils.Tuple{System.Double,System.Double,System.Double},KRPC.SpaceCenter.Services.ReferenceFrame)" />.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Force.Part">
             <summary>
             The part that this force is applied to.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Force.ForceVector">
             <summary>
             The force vector, in Newtons.
             </summary>
             <returns>A vector pointing in the direction that the force acts,
             with its magnitude equal to the strength of the force in Newtons.</returns>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Force.Position">
             <summary>
             The position at which the force acts, in reference frame <see cref="T:KRPC.SpaceCenter.Services.ReferenceFrame" />.
             </summary>
             <returns>The position as a vector.</returns>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Force.ReferenceFrame">
             <summary>
             The reference frame of the force vector and position.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Force.Remove">
             <summary>
             Remove the force.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.Intake">
             <summary>
             An air intake. Obtained by calling <see cref="P:KRPC.SpaceCenter.Services.Parts.Part.Intake" />.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Intake.Equals(KRPC.SpaceCenter.Services.Parts.Intake)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Intake.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Intake.Part">
             <summary>
             The part object for this intake.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Intake.Open">
             <summary>
             Whether the intake is open.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Intake.Speed">
             <summary>
             Speed of the flow into the intake, in <math>m/s</math>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Intake.Flow">
             <summary>
             The rate of flow into the intake, in units of resource per second.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Intake.Area">
             <summary>
             The area of the intake's opening, in square meters.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.LaunchClamp">
             <summary>
             A launch clamp. Obtained by calling <see cref="P:KRPC.SpaceCenter.Services.Parts.Part.LaunchClamp" />.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.LaunchClamp.Equals(KRPC.SpaceCenter.Services.Parts.LaunchClamp)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.LaunchClamp.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.LaunchClamp.Part">
             <summary>
             The part object for this launch clamp.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.LaunchClamp.Release">
             <summary>
             Releases the docking clamp. Has no effect if the clamp has already been released.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.Leg">
             <summary>
             A landing leg. Obtained by calling <see cref="P:KRPC.SpaceCenter.Services.Parts.Part.Leg" />.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Leg.Equals(KRPC.SpaceCenter.Services.Parts.Leg)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Leg.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Leg.Part">
             <summary>
             The part object for this landing leg.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Leg.State">
             <summary>
             The current state of the landing leg.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Leg.Deployable">
             <summary>
             Whether the leg is deployable.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Leg.Deployed">
             <summary>
             Whether the landing leg is deployed.
             </summary>
             <remarks>
             Fixed landing legs are always deployed.
             Returns an error if you try to deploy fixed landing gear.
             </remarks>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Leg.IsGrounded">
             <summary>
             Returns whether the leg is touching the ground.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.LegState">
             <summary>
             The state of a landing leg. See <see cref="P:KRPC.SpaceCenter.Services.Parts.Leg.State" />.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.LegState.Deployed">
             <summary>
             Landing leg is fully deployed.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.LegState.Retracted">
             <summary>
             Landing leg is fully retracted.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.LegState.Deploying">
             <summary>
             Landing leg is being deployed.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.LegState.Retracting">
             <summary>
             Landing leg is being retracted.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.LegState.Broken">
             <summary>
             Landing leg is broken.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.Light">
             <summary>
             A light. Obtained by calling <see cref="P:KRPC.SpaceCenter.Services.Parts.Part.Light" />.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Light.Equals(KRPC.SpaceCenter.Services.Parts.Light)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Light.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Light.Part">
             <summary>
             The part object for this light.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Light.Active">
             <summary>
             Whether the light is switched on.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Light.Color">
             <summary>
             The color of the light, as an RGB triple.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Light.PowerUsage">
             <summary>
             The current power usage, in units of charge per second.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.Module">
             <summary>
             This can be used to interact with a specific part module. This includes part modules in
             stock KSP, and those added by mods.
            
             In KSP, each part has zero or more
             <a href="https://wiki.kerbalspaceprogram.com/wiki/CFG_File_Documentation#MODULES">PartModules</a>
             associated with it. Each one contains some of the functionality of the part.
             For example, an engine has a "ModuleEngines" part module that contains all the
             functionality of an engine.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Module.Equals(KRPC.SpaceCenter.Services.Parts.Module)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Module.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Module.Name">
             <summary>
             Name of the PartModule. For example, "ModuleEngines".
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Module.Part">
             <summary>
             The part that contains this module.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Module.Fields">
             <summary>
             The modules field names and their associated values, as a dictionary.
             These are the values visible in the right-click menu of the part.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Module.HasField(System.String)">
             <summary>
             Returns <c>true</c> if the module has a field with the given name.
             </summary>
             <param name="name">Name of the field.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Module.GetField(System.String)">
             <summary>
             Returns the value of a field.
             </summary>
             <param name="name">Name of the field.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Module.SetFieldInt(System.String,System.Int32)">
             <summary>
             Set the value of a field to the given integer number.
             </summary>
             <param name="name">Name of the field.</param>
             <param name="value">Value to set.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Module.SetFieldFloat(System.String,System.Single)">
             <summary>
             Set the value of a field to the given floating point number.
             </summary>
             <param name="name">Name of the field.</param>
             <param name="value">Value to set.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Module.SetFieldString(System.String,System.String)">
             <summary>
             Set the value of a field to the given string.
             </summary>
             <param name="name">Name of the field.</param>
             <param name="value">Value to set.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Module.ResetField(System.String)">
             <summary>
             Set the value of a field to its original value.
             </summary>
             <param name="name">Name of the field.</param>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Module.Events">
             <summary>
             A list of the names of all of the modules events. Events are the clickable buttons
             visible in the right-click menu of the part.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Module.HasEvent(System.String)">
             <summary>
             <c>true</c> if the module has an event with the given name.
             </summary>
             <param name="name"></param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Module.TriggerEvent(System.String)">
             <summary>
             Trigger the named event. Equivalent to clicking the button in the right-click menu
             of the part.
             </summary>
             <param name="name"></param>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Module.Actions">
             <summary>
             A list of all the names of the modules actions. These are the parts actions that can
             be assigned to action groups in the in-game editor.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Module.HasAction(System.String)">
             <summary>
             <c>true</c> if the part has an action with the given name.
             </summary>
             <param name="name"></param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Module.SetAction(System.String,System.Boolean)">
             <summary>
             Set the value of an action with the given name.
             </summary>
             <param name="name"></param>
             <param name="value"></param>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.MotorState">
             <summary>
             The state of the motor on a powered wheel. See <see cref="P:KRPC.SpaceCenter.Services.Parts.Wheel.MotorState" />.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.MotorState.Idle">
             <summary>
             The motor is idle.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.MotorState.Running">
             <summary>
             The motor is running.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.MotorState.Disabled">
             <summary>
             The motor is disabled.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.MotorState.Inoperable">
             <summary>
             The motor is inoperable.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.MotorState.NotEnoughResources">
             <summary>
             The motor does not have enough resources to run.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.Parachute">
             <summary>
             A parachute. Obtained by calling <see cref="P:KRPC.SpaceCenter.Services.Parts.Part.Parachute" />.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Parachute.Equals(KRPC.SpaceCenter.Services.Parts.Parachute)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Parachute.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Parachute.Part">
             <summary>
             The part object for this parachute.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Parachute.Deploy">
             <summary>
             Deploys the parachute. This has no effect if the parachute has already
             been deployed.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Parachute.Deployed">
             <summary>
             Whether the parachute has been deployed.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Parachute.Arm">
             <summary>
             Deploys the parachute. This has no effect if the parachute has already
             been armed or deployed. Only applicable to RealChutes parachutes.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Parachute.Armed">
             <summary>
             Whether the parachute has been armed or deployed. Only applicable to
             RealChutes parachutes.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Parachute.State">
             <summary>
             The current state of the parachute.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Parachute.DeployAltitude">
             <summary>
             The altitude at which the parachute will full deploy, in meters.
             Only applicable to stock parachutes.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Parachute.DeployMinPressure">
             <summary>
             The minimum pressure at which the parachute will semi-deploy, in atmospheres.
             Only applicable to stock parachutes.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.ParachuteState">
             <summary>
             The state of a parachute. See <see cref="P:KRPC.SpaceCenter.Services.Parts.Parachute.State" />.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.ParachuteState.Stowed">
             <summary>
             The parachute is safely tucked away inside its housing.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.ParachuteState.Armed">
             <summary>
             The parachute is armed for deployment. (RealChutes only)
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.ParachuteState.Active">
             <summary>
             The parachute is still stowed, but ready to semi-deploy.
             (Stock parachutes only)
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.ParachuteState.SemiDeployed">
             <summary>
             The parachute has been deployed and is providing some drag,
             but is not fully deployed yet. (Stock parachutes only)
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.ParachuteState.Deployed">
             <summary>
             The parachute is fully deployed.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.ParachuteState.Cut">
             <summary>
             The parachute has been cut.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.Part">
             <summary>
             Represents an individual part. Vessels are made up of multiple parts.
             Instances of this class can be obtained by several methods in <see cref="T:KRPC.SpaceCenter.Services.Parts.Parts" />.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Part.#ctor(Part)">
             <summary>
             Create a part object for the given KSP part
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Part.Equals(KRPC.SpaceCenter.Services.Parts.Part)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Part.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.InternalPart">
             <summary>
             The KSP part.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.Name">
             <summary>
             Internal name of the part, as used in
             <a href="https://wiki.kerbalspaceprogram.com/wiki/CFG_File_Documentation">part cfg files</a>.
             For example "Mark1-2Pod".
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.Title">
             <summary>
             Title of the part, as shown when the part is right clicked in-game. For example "Mk1-2 Command Pod".
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.Tag">
             <summary>
             The name tag for the part. Can be set to a custom string using the
             in-game user interface.
             </summary>
             <remarks>
             This string is shared with
             <a href="https://forum.kerbalspaceprogram.com/index.php?/topic/61827-/">kOS</a>
             if it is installed.
             </remarks>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.Highlighted">
             <summary>
             Whether the part is highlighted.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.HighlightColor">
             <summary>
             The color used to highlight the part, as an RGB triple.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.Cost">
             <summary>
             The cost of the part, in units of funds.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.Vessel">
             <summary>
             The vessel that contains this part.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.Parent">
             <summary>
             The parts parent. Returns <c>null</c> if the part does not have a parent.
             This, in combination with <see cref="P:KRPC.SpaceCenter.Services.Parts.Part.Children" />, can be used to traverse the vessels
             parts tree.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.Children">
             <summary>
             The parts children. Returns an empty list if the part has no children.
             This, in combination with <see cref="P:KRPC.SpaceCenter.Services.Parts.Part.Parent" />, can be used to traverse the vessels
             parts tree.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.AxiallyAttached">
             <summary>
             Whether the part is axially attached to its parent, i.e. on the top
             or bottom of its parent. If the part has no parent, returns <c>false</c>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.RadiallyAttached">
             <summary>
             Whether the part is radially attached to its parent, i.e. on the side of its parent.
             If the part has no parent, returns <c>false</c>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.Stage">
             <summary>
             The stage in which this part will be activated. Returns -1 if the part is not
             activated by staging.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.DecoupleStage">
             <summary>
             The stage in which this part will be decoupled. Returns -1 if the part is never
             decoupled from the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.Massless">
             <summary>
             Whether the part is
             <a href="https://wiki.kerbalspaceprogram.com/wiki/Massless_part">massless</a>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.Mass">
             <summary>
             The current mass of the part, including resources it contains, in kilograms.
             Returns zero if the part is massless.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.DryMass">
             <summary>
             The mass of the part, not including any resources it contains, in kilograms.
             Returns zero if the part is massless.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.Shielded">
             <summary>
             Whether the part is shielded from the exterior of the vessel, for example by a fairing.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.DynamicPressure">
             <summary>
             The dynamic pressure acting on the part, in Pascals.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.ImpactTolerance">
             <summary>
             The impact tolerance of the part, in meters per second.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.Temperature">
             <summary>
             Temperature of the part, in Kelvin.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.SkinTemperature">
             <summary>
             Temperature of the skin of the part, in Kelvin.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.MaxTemperature">
             <summary>
             Maximum temperature that the part can survive, in Kelvin.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.MaxSkinTemperature">
             <summary>
             Maximum temperature that the skin of the part can survive, in Kelvin.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.ThermalMass">
             <summary>
             A measure of how much energy it takes to increase the internal temperature of the part,
             in Joules per Kelvin.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.ThermalSkinMass">
             <summary>
             A measure of how much energy it takes to increase the skin temperature of the part,
             in Joules per Kelvin.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.ThermalResourceMass">
             <summary>
             A measure of how much energy it takes to increase the temperature of the resources
             contained in the part, in Joules per Kelvin.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.ThermalInternalFlux">
             <summary>
             The rate at which heat energy is begin generated by the part.
             For example, some engines generate heat by combusting fuel.
             Measured in energy per unit time, or power, in Watts.
             A positive value means the part is gaining heat energy, and negative means it is losing
             heat energy.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.ThermalConductionFlux">
             <summary>
             The rate at which heat energy is conducting into or out of the part via contact with
             other parts. Measured in energy per unit time, or power, in Watts.
             A positive value means the part is gaining heat energy, and negative means it is
             losing heat energy.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.ThermalConvectionFlux">
             <summary>
             The rate at which heat energy is convecting into or out of the part from the
             surrounding atmosphere. Measured in energy per unit time, or power, in Watts.
             A positive value means the part is gaining heat energy, and negative means it is
             losing heat energy.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.ThermalRadiationFlux">
             <summary>
             The rate at which heat energy is radiating into or out of the part from the surrounding
             environment. Measured in energy per unit time, or power, in Watts.
             A positive value means the part is gaining heat energy, and negative means it is
             losing heat energy.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.ThermalSkinToInternalFlux">
             <summary>
             The rate at which heat energy is transferring between the part's skin and its internals.
             Measured in energy per unit time, or power, in Watts.
             A positive value means the part's internals are gaining heat energy,
             and negative means its skin is gaining heat energy.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.Resources">
             <summary>
             A <see cref="T:KRPC.SpaceCenter.Services.Resources" /> object for the part.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.Crossfeed">
             <summary>
             Whether this part is crossfeed capable.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.IsFuelLine">
             <summary>
             Whether this part is a fuel line.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.FuelLinesFrom">
             <summary>
             The parts that are connected to this part via fuel lines, where the direction of the
             fuel line is into this part.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.FuelLinesTo">
             <summary>
             The parts that are connected to this part via fuel lines, where the direction of the
             fuel line is out of this part.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.Modules">
             <summary>
             The modules for this part.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.Antenna">
             <summary>
             A <see cref="T:KRPC.SpaceCenter.Services.Parts.Antenna" /> if the part is an antenna, otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.CargoBay">
             <summary>
             A <see cref="T:KRPC.SpaceCenter.Services.Parts.CargoBay" /> if the part is a cargo bay, otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.ControlSurface">
             <summary>
             A <see cref="T:KRPC.SpaceCenter.Services.Parts.ControlSurface" /> if the part is an aerodynamic control surface,
             otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.Decoupler">
             <summary>
             A <see cref="T:KRPC.SpaceCenter.Services.Parts.Decoupler" /> if the part is a decoupler, otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.DockingPort">
             <summary>
             A <see cref="T:KRPC.SpaceCenter.Services.Parts.DockingPort" /> if the part is a docking port, otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.Engine">
             <summary>
             An <see cref="T:KRPC.SpaceCenter.Services.Parts.Engine" /> if the part is an engine, otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.Experiment">
             <summary>
             An <see cref="T:KRPC.SpaceCenter.Services.Parts.Experiment" /> if the part is a science experiment, otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.Fairing">
             <summary>
             A <see cref="T:KRPC.SpaceCenter.Services.Parts.Fairing" /> if the part is a fairing, otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.Intake">
             <summary>
             An <see cref="T:KRPC.SpaceCenter.Services.Parts.Intake" /> if the part is an intake, otherwise <c>null</c>.
             </summary>
             <remarks>
             This includes any part that generates thrust. This covers many different types
             of engine, including liquid fuel rockets, solid rocket boosters and jet engines.
             For RCS thrusters see <see cref="T:KRPC.SpaceCenter.Services.Parts.RCS" />.
             </remarks>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.Leg">
             <summary>
             A <see cref="T:KRPC.SpaceCenter.Services.Parts.Leg" /> if the part is a landing leg, otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.LaunchClamp">
             <summary>
             A <see cref="T:KRPC.SpaceCenter.Services.Parts.LaunchClamp" /> if the part is a launch clamp, otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.Light">
             <summary>
             A <see cref="T:KRPC.SpaceCenter.Services.Parts.Light" /> if the part is a light, otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.Parachute">
             <summary>
             A <see cref="T:KRPC.SpaceCenter.Services.Parts.Parachute" /> if the part is a parachute, otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.Radiator">
             <summary>
             A <see cref="T:KRPC.SpaceCenter.Services.Parts.Radiator" /> if the part is a radiator, otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.RCS">
             <summary>
             A <see cref="T:KRPC.SpaceCenter.Services.Parts.RCS" /> if the part is an RCS block/thruster, otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.ReactionWheel">
             <summary>
             A <see cref="T:KRPC.SpaceCenter.Services.Parts.ReactionWheel" /> if the part is a reaction wheel, otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.ResourceConverter">
             <summary>
             A <see cref="T:KRPC.SpaceCenter.Services.Parts.ResourceConverter" /> if the part is a resource converter,
             otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.ResourceHarvester">
             <summary>
             A <see cref="T:KRPC.SpaceCenter.Services.Parts.ResourceHarvester" /> if the part is a resource harvester,
             otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.Sensor">
             <summary>
             A <see cref="T:KRPC.SpaceCenter.Services.Parts.Sensor" /> if the part is a sensor, otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.SolarPanel">
             <summary>
             A <see cref="T:KRPC.SpaceCenter.Services.Parts.SolarPanel" /> if the part is a solar panel, otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.Wheel">
             <summary>
             A <see cref="T:KRPC.SpaceCenter.Services.Parts.Wheel" /> if the part is a wheel, otherwise <c>null</c>.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Part.Position(KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The position of the part in the given reference frame.
             </summary>
             <returns>The position as a vector.</returns>
             <param name="referenceFrame">The reference frame that the returned
             position vector is in.</param>
             <remarks>
             This is a fixed position in the part, defined by the parts model.
             It s not necessarily the same as the parts center of mass.
             Use <see cref="M:KRPC.SpaceCenter.Services.Parts.Part.CenterOfMass(KRPC.SpaceCenter.Services.ReferenceFrame)" /> to get the parts center of mass.
             </remarks>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Part.CenterOfMass(KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The position of the parts center of mass in the given reference frame.
             If the part is physicsless, this is equivalent to <see cref="M:KRPC.SpaceCenter.Services.Parts.Part.Position(KRPC.SpaceCenter.Services.ReferenceFrame)" />.
             </summary>
             <returns>The position as a vector.</returns>
             <param name="referenceFrame">The reference frame that the returned
             position vector is in.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Part.BoundingBox(KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The axis-aligned bounding box of the part in the given reference frame.
             </summary>
             <returns>The positions of the minimum and maximum vertices of the box,
             as position vectors.</returns>
             <param name="referenceFrame">The reference frame that the returned
             position vectors are in.</param>
             <remarks>
             This is computed from the collision mesh of the part.
             If the part is not collidable, the box has zero volume and is centered on
             the <see cref="M:KRPC.SpaceCenter.Services.Parts.Part.Position(KRPC.SpaceCenter.Services.ReferenceFrame)" /> of the part.
             </remarks>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Part.Direction(KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The direction the part points in, in the given reference frame.
             </summary>
             <returns>The direction as a unit vector.</returns>
             <param name="referenceFrame">The reference frame that the returned
             direction is in.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Part.Velocity(KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The linear velocity of the part in the given reference frame.
             </summary>
             <returns>The velocity as a vector. The vector points in the direction of travel,
             and its magnitude is the speed of the body in meters per second.</returns>
             <param name="referenceFrame">The reference frame that the returned
             velocity vector is in.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Part.Rotation(KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The rotation of the part, in the given reference frame.
             </summary>
             <returns>The rotation as a quaternion of the form <math>(x, y, z, w)</math>.</returns>
             <param name="referenceFrame">The reference frame that the returned
             rotation is in.</param>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.MomentOfInertia">
             <summary>
             The moment of inertia of the part in <math>kg.m^2</math> around its center of mass
             in the parts reference frame (<see cref="T:KRPC.SpaceCenter.Services.ReferenceFrame" />).
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.InertiaTensor">
             <summary>
             The inertia tensor of the part in the parts reference frame
             (<see cref="T:KRPC.SpaceCenter.Services.ReferenceFrame" />).
             Returns the 3x3 matrix as a list of elements, in row-major order.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Part.ComputeInertiaTensor">
             <summary>
             Computes the inertia tensor of the part in the parts reference frame.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.ReferenceFrame">
             <summary>
             The reference frame that is fixed relative to this part, and centered on a fixed
             position within the part, defined by the parts model.
             <list type="bullet">
             <item><description>The origin is at the position of the part, as returned by
             <see cref="M:KRPC.SpaceCenter.Services.Parts.Part.Position(KRPC.SpaceCenter.Services.ReferenceFrame)" />.</description></item>
             <item><description>The axes rotate with the part.</description></item>
             <item><description>The x, y and z axis directions depend on the design of the part.
             </description></item>
             </list>
             </summary>
             <remarks>
             For docking port parts, this reference frame is not necessarily equivalent to the
             reference frame for the docking port, returned by
             <see cref="P:KRPC.SpaceCenter.Services.Parts.DockingPort.ReferenceFrame" />.
             </remarks>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Part.CenterOfMassReferenceFrame">
             <summary>
             The reference frame that is fixed relative to this part, and centered on its
             center of mass.
             <list type="bullet">
             <item><description>The origin is at the center of mass of the part, as returned by
             <see cref="M:KRPC.SpaceCenter.Services.Parts.Part.CenterOfMass(KRPC.SpaceCenter.Services.ReferenceFrame)" />.</description></item>
             <item><description>The axes rotate with the part.</description></item>
             <item><description>The x, y and z axis directions depend on the design of the part.
             </description></item>
             </list>
             </summary>
             <remarks>
             For docking port parts, this reference frame is not necessarily equivalent to the
             reference frame for the docking port, returned by
             <see cref="P:KRPC.SpaceCenter.Services.Parts.DockingPort.ReferenceFrame" />.
             </remarks>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Part.AddForce(KRPC.Utils.Tuple{System.Double,System.Double,System.Double},KRPC.Utils.Tuple{System.Double,System.Double,System.Double},KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             Exert a constant force on the part, acting at the given position.
             </summary>
             <returns>An object that can be used to remove or modify the force.</returns>
             <param name="force">A vector pointing in the direction that the force acts,
             with its magnitude equal to the strength of the force in Newtons.</param>
             <param name="position">The position at which the force acts, as a vector.</param>
             <param name="referenceFrame">The reference frame that the
             force and position are in.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Part.InstantaneousForce(KRPC.Utils.Tuple{System.Double,System.Double,System.Double},KRPC.Utils.Tuple{System.Double,System.Double,System.Double},KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             Exert an instantaneous force on the part, acting at the given position.
             </summary>
             <param name="force">A vector pointing in the direction that the force acts,
             with its magnitude equal to the strength of the force in Newtons.</param>
             <param name="position">The position at which the force acts, as a vector.</param>
             <param name="referenceFrame">The reference frame that the
             force and position are in.</param>
             <remarks>The force is applied instantaneously in a single physics update.</remarks>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.Parts">
             <summary>
             Instances of this class are used to interact with the parts of a vessel.
             An instance can be obtained by calling <see cref="P:KRPC.SpaceCenter.Services.Vessel.Parts" />.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Parts.Equals(KRPC.SpaceCenter.Services.Parts.Parts)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Parts.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Parts.InternalVessel">
             <summary>
             The KSP vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Parts.All">
             <summary>
             A list of all of the vessels parts.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Parts.Root">
             <summary>
             The vessels root part.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Parts.Controlling">
             <summary>
             The part from which the vessel is controlled.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Parts.WithName(System.String)">
             <summary>
             A list of parts whose <see cref="P:KRPC.SpaceCenter.Services.Parts.Part.Name" /> is <paramref name="name" />.
             </summary>
             <param name="name"></param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Parts.WithTitle(System.String)">
             <summary>
             A list of all parts whose <see cref="P:KRPC.SpaceCenter.Services.Parts.Part.Title" /> is <paramref name="title" />.
             </summary>
             <param name="title"></param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Parts.WithTag(System.String)">
             <summary>
             A list of all parts whose <see cref="P:KRPC.SpaceCenter.Services.Parts.Part.Tag" /> is <paramref name="tag" />.
             </summary>
             <param name="tag"></param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Parts.WithModule(System.String)">
             <summary>
             A list of all parts that contain a <see cref="T:KRPC.SpaceCenter.Services.Parts.Module" /> whose
             <see cref="P:KRPC.SpaceCenter.Services.Parts.Module.Name" /> is <paramref name="moduleName" />.
             </summary>
             <param name="moduleName"></param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Parts.InStage(System.Int32)">
             <summary>
             A list of all parts that are activated in the given <paramref name="stage" />.
             </summary>
             <param name="stage"></param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Parts.InDecoupleStage(System.Int32)">
             <summary>
             A list of all parts that are decoupled in the given <paramref name="stage" />.
             </summary>
             <param name="stage"></param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Parts.ModulesWithName(System.String)">
             <summary>
             A list of modules (combined across all parts in the vessel) whose
             <see cref="P:KRPC.SpaceCenter.Services.Parts.Module.Name" /> is <paramref name="moduleName" />.
             </summary>
             <param name="moduleName"></param>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Parts.Antennas">
             <summary>
             A list of all antennas in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Parts.ControlSurfaces">
             <summary>
             A list of all control surfaces in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Parts.CargoBays">
             <summary>
             A list of all cargo bays in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Parts.Decouplers">
             <summary>
             A list of all decouplers in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Parts.DockingPorts">
             <summary>
             A list of all docking ports in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Parts.Engines">
             <summary>
             A list of all engines in the vessel.
             </summary>
             <remarks>
             This includes any part that generates thrust. This covers many different types
             of engine, including liquid fuel rockets, solid rocket boosters, jet engines and
             RCS thrusters.
             </remarks>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Parts.Experiments">
             <summary>
             A list of all science experiments in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Parts.Fairings">
             <summary>
             A list of all fairings in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Parts.Intakes">
             <summary>
             A list of all intakes in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Parts.Legs">
             <summary>
             A list of all landing legs attached to the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Parts.LaunchClamps">
             <summary>
             A list of all launch clamps attached to the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Parts.Lights">
             <summary>
             A list of all lights in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Parts.Parachutes">
             <summary>
             A list of all parachutes in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Parts.Radiators">
             <summary>
             A list of all radiators in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Parts.RCS">
             <summary>
             A list of all RCS blocks/thrusters in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Parts.ReactionWheels">
             <summary>
             A list of all reaction wheels in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Parts.ResourceConverters">
             <summary>
             A list of all resource converters in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Parts.ResourceHarvesters">
             <summary>
             A list of all resource harvesters in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Parts.Sensors">
             <summary>
             A list of all sensors in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Parts.SolarPanels">
             <summary>
             A list of all solar panels in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Parts.Wheels">
             <summary>
             A list of all wheels in the vessel.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.Propellant">
             <summary>
             A propellant for an engine. Obtains by calling <see cref="P:KRPC.SpaceCenter.Services.Parts.Engine.Propellants" />.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Propellant.Equals(KRPC.SpaceCenter.Services.Parts.Propellant)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Propellant.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Propellant.InternalPart">
             <summary>
             The KSP part.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Propellant.InternalPropellant">
             <summary>
             The KSP propellant.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Propellant.Name">
             <summary>
             The name of the propellant.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Propellant.CurrentAmount">
             <summary>
             The current amount of propellant.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Propellant.CurrentRequirement">
             <summary>
             The required amount of propellant.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Propellant.TotalResourceAvailable">
             <summary>
             The total amount of the underlying resource currently reachable given
             resource flow rules.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Propellant.TotalResourceCapacity">
             <summary>
             The total vehicle capacity for the underlying propellant resource,
             restricted by resource flow rules.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Propellant.IgnoreForIsp">
             <summary>
             If this propellant should be ignored when calculating required mass flow
             given specific impulse.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Propellant.IgnoreForThrustCurve">
             <summary>
             If this propellant should be ignored for thrust curve calculations.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Propellant.DrawStackGauge">
             <summary>
             If this propellant has a stack gauge or not.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Propellant.IsDeprived">
             <summary>
             If this propellant is deprived.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Propellant.Ratio">
             <summary>
             The propellant ratio.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.RCS">
             <summary>
             An RCS block or thruster. Obtained by calling <see cref="P:KRPC.SpaceCenter.Services.Parts.Part.RCS" />.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.RCS.Equals(KRPC.SpaceCenter.Services.Parts.RCS)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.RCS.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.RCS.Part">
             <summary>
             The part object for this RCS.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.RCS.Active">
             <summary>
             Whether the RCS thrusters are active.
             An RCS thruster is inactive if the RCS action group is disabled
             (<see cref="P:KRPC.SpaceCenter.Services.Control.RCS" />), the RCS thruster itself is not enabled
             (<see cref="P:KRPC.SpaceCenter.Services.Parts.RCS.Enabled" />) or it is covered by a fairing (<see cref="P:KRPC.SpaceCenter.Services.Parts.Part.Shielded" />).
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.RCS.Enabled">
             <summary>
             Whether the RCS thrusters are enabled.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.RCS.PitchEnabled">
             <summary>
             Whether the RCS thruster will fire when pitch control input is given.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.RCS.YawEnabled">
             <summary>
             Whether the RCS thruster will fire when yaw control input is given.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.RCS.RollEnabled">
             <summary>
             Whether the RCS thruster will fire when roll control input is given.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.RCS.ForwardEnabled">
             <summary>
             Whether the RCS thruster will fire when pitch control input is given.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.RCS.UpEnabled">
             <summary>
             Whether the RCS thruster will fire when yaw control input is given.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.RCS.RightEnabled">
             <summary>
             Whether the RCS thruster will fire when roll control input is given.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.RCS.AvailableTorque">
             <summary>
             The available torque, in Newton meters, that can be produced by this RCS,
             in the positive and negative pitch, roll and yaw axes of the vessel. These axes
             correspond to the coordinate axes of the <see cref="P:KRPC.SpaceCenter.Services.Vessel.ReferenceFrame" />.
             Returns zero if RCS is disable.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.RCS.GetThrust(System.Double)">
             <summary>
             Get the thrust of the RCS thruster with the given atmospheric conditions, in Newtons.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.RCS.MaxThrust">
             <summary>
             The maximum amount of thrust that can be produced by the RCS thrusters when active,
             in Newtons.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.RCS.MaxVacuumThrust">
             <summary>
             The maximum amount of thrust that can be produced by the RCS thrusters when active
             in a vacuum, in Newtons.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.RCS.Thrusters">
             <summary>
             A list of thrusters, one of each nozzel in the RCS part.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.RCS.SpecificImpulse">
             <summary>
             The current specific impulse of the RCS, in seconds. Returns zero
             if the RCS is not active.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.RCS.VacuumSpecificImpulse">
             <summary>
             The vacuum specific impulse of the RCS, in seconds.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.RCS.KerbinSeaLevelSpecificImpulse">
             <summary>
             The specific impulse of the RCS at sea level on Kerbin, in seconds.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.RCS.Propellants">
             <summary>
             The names of resources that the RCS consumes.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.RCS.PropellantRatios">
             <summary>
             The ratios of resources that the RCS consumes. A dictionary mapping resource names
             to the ratios at which they are consumed by the RCS.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.RCS.HasFuel">
             <summary>
             Whether the RCS has fuel available.
             </summary>
             <remarks>
             The RCS thruster must be activated for this property to update correctly.
             </remarks>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.Radiator">
             <summary>
             A radiator. Obtained by calling <see cref="P:KRPC.SpaceCenter.Services.Parts.Part.Radiator" />.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Radiator.Equals(KRPC.SpaceCenter.Services.Parts.Radiator)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Radiator.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Radiator.Part">
             <summary>
             The part object for this radiator.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Radiator.Deployable">
             <summary>
             Whether the radiator is deployable.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Radiator.Deployed">
             <summary>
             For a deployable radiator, <c>true</c> if the radiator is extended.
             If the radiator is not deployable, this is always <c>true</c>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Radiator.State">
             <summary>
             The current state of the radiator.
             </summary>
             <remarks>
             A fixed radiator is always <see cref="F:KRPC.SpaceCenter.Services.Parts.RadiatorState.Extended" />.
             </remarks>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.RadiatorState">
             <summary>
             The state of a radiator. <see cref="T:KRPC.SpaceCenter.Services.Parts.RadiatorState" />
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.RadiatorState.Extended">
             <summary>
             Radiator is fully extended.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.RadiatorState.Retracted">
             <summary>
             Radiator is fully retracted.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.RadiatorState.Extending">
             <summary>
             Radiator is being extended.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.RadiatorState.Retracting">
             <summary>
             Radiator is being retracted.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.RadiatorState.Broken">
             <summary>
             Radiator is being broken.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.ReactionWheel">
             <summary>
             A reaction wheel. Obtained by calling <see cref="P:KRPC.SpaceCenter.Services.Parts.Part.ReactionWheel" />.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.ReactionWheel.Equals(KRPC.SpaceCenter.Services.Parts.ReactionWheel)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.ReactionWheel.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ReactionWheel.Part">
             <summary>
             The part object for this reaction wheel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ReactionWheel.Active">
             <summary>
             Whether the reaction wheel is active.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ReactionWheel.Broken">
             <summary>
             Whether the reaction wheel is broken.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ReactionWheel.AvailableTorque">
             <summary>
             The available torque, in Newton meters, that can be produced by this reaction wheel,
             in the positive and negative pitch, roll and yaw axes of the vessel. These axes
             correspond to the coordinate axes of the <see cref="P:KRPC.SpaceCenter.Services.Vessel.ReferenceFrame" />.
             Returns zero if the reaction wheel is inactive or broken.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ReactionWheel.MaxTorque">
             <summary>
             The maximum torque, in Newton meters, that can be produced by this reaction wheel,
             when it is active, in the positive and negative pitch, roll and yaw axes of the vessel.
             These axes correspond to the coordinate axes of the <see cref="P:KRPC.SpaceCenter.Services.Vessel.ReferenceFrame" />.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.ResourceConverter">
             <summary>
             A resource converter. Obtained by calling <see cref="P:KRPC.SpaceCenter.Services.Parts.Part.ResourceConverter" />.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.ResourceConverter.Equals(KRPC.SpaceCenter.Services.Parts.ResourceConverter)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.ResourceConverter.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ResourceConverter.Part">
             <summary>
             The part object for this converter.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ResourceConverter.Count">
             <summary>
             The number of converters in the part.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.ResourceConverter.Active(System.Int32)">
             <summary>
             True if the specified converter is active.
             </summary>
             <param name="index">Index of the converter.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.ResourceConverter.Name(System.Int32)">
             <summary>
             The name of the specified converter.
             </summary>
             <param name="index">Index of the converter.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.ResourceConverter.Start(System.Int32)">
             <summary>
             Start the specified converter.
             </summary>
             <param name="index">Index of the converter.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.ResourceConverter.Stop(System.Int32)">
             <summary>
             Stop the specified converter.
             </summary>
             <param name="index">Index of the converter.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.ResourceConverter.State(System.Int32)">
             <summary>
             The state of the specified converter.
             </summary>
             <param name="index">Index of the converter.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.ResourceConverter.StatusInfo(System.Int32)">
             <summary>
             Status information for the specified converter.
             This is the full status message shown in the in-game UI.
             </summary>
             <param name="index">Index of the converter.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.ResourceConverter.Inputs(System.Int32)">
             <summary>
             List of the names of resources consumed by the specified converter.
             </summary>
             <param name="index">Index of the converter.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.ResourceConverter.Outputs(System.Int32)">
             <summary>
             List of the names of resources produced by the specified converter.
             </summary>
             <param name="index">Index of the converter.</param>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ResourceConverter.ThermalEfficiency">
             <summary>
             The thermal efficiency of the converter, as a percentage of its maximum.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ResourceConverter.CoreTemperature">
             <summary>
             The core temperature of the converter, in Kelvin.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ResourceConverter.OptimumCoreTemperature">
             <summary>
             The core temperature at which the converter will operate with peak efficiency, in Kelvin.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.ResourceConverterState">
             <summary>
             The state of a resource converter. See <see cref="M:KRPC.SpaceCenter.Services.Parts.ResourceConverter.State(System.Int32)" />.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.ResourceConverterState.Running">
             <summary>
             Converter is running.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.ResourceConverterState.Idle">
             <summary>
             Converter is idle.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.ResourceConverterState.MissingResource">
             <summary>
             Converter is missing a required resource.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.ResourceConverterState.StorageFull">
             <summary>
             No available storage for output resource.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.ResourceConverterState.Capacity">
             <summary>
             At preset resource capacity.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.ResourceConverterState.Unknown">
             <summary>
             Unknown state. Possible with modified resource converters.
             In this case, check <see cref="M:KRPC.SpaceCenter.Services.Parts.ResourceConverter.StatusInfo(System.Int32)" /> for more information.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.ResourceHarvester">
             <summary>
             A resource harvester (drill). Obtained by calling <see cref="P:KRPC.SpaceCenter.Services.Parts.Part.ResourceHarvester" />.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.ResourceHarvester.Equals(KRPC.SpaceCenter.Services.Parts.ResourceHarvester)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.ResourceHarvester.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ResourceHarvester.Part">
             <summary>
             The part object for this harvester.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ResourceHarvester.State">
             <summary>
             The state of the harvester.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ResourceHarvester.Deployed">
             <summary>
             Whether the harvester is deployed.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ResourceHarvester.Active">
             <summary>
             Whether the harvester is actively drilling.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ResourceHarvester.ExtractionRate">
             <summary>
             The rate at which the drill is extracting ore, in units per second.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ResourceHarvester.ThermalEfficiency">
             <summary>
             The thermal efficiency of the drill, as a percentage of its maximum.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ResourceHarvester.CoreTemperature">
             <summary>
             The core temperature of the drill, in Kelvin.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ResourceHarvester.OptimumCoreTemperature">
             <summary>
             The core temperature at which the drill will operate with peak efficiency, in Kelvin.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.ResourceHarvesterState">
             <summary>
             The state of a resource harvester. See <see cref="P:KRPC.SpaceCenter.Services.Parts.ResourceHarvester.State" />.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.ResourceHarvesterState.Deploying">
             <summary>
             The drill is deploying.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.ResourceHarvesterState.Deployed">
             <summary>
             The drill is deployed and ready.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.ResourceHarvesterState.Retracting">
             <summary>
             The drill is retracting.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.ResourceHarvesterState.Retracted">
             <summary>
             The drill is retracted.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.ResourceHarvesterState.Active">
             <summary>
             The drill is running.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.ScienceData">
             <summary>
             Obtained by calling <see cref="P:KRPC.SpaceCenter.Services.Parts.Experiment.Data" />.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.ScienceData.Equals(KRPC.SpaceCenter.Services.Parts.ScienceData)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.ScienceData.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ScienceData.DataAmount">
             <summary>
             Data amount.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ScienceData.ScienceValue">
             <summary>
             Science value.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ScienceData.TransmitValue">
             <summary>
             Transmit value.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.ScienceSubject">
             <summary>
             Obtained by calling <see cref="P:KRPC.SpaceCenter.Services.Parts.Experiment.ScienceSubject" />.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ScienceSubject.Science">
             <summary>
             Amount of science already earned from this subject, not updated until after
             transmission/recovery.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ScienceSubject.ScienceCap">
             <summary>
             Total science allowable for this subject.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ScienceSubject.IsComplete">
             <summary>
             Whether the experiment has been completed.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ScienceSubject.DataScale">
             <summary>
             Multiply science value by this to determine data amount in mits.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ScienceSubject.ScientificValue">
             <summary>
             Diminishing value multiplier for decreasing the science value returned from repeated
             experiments.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ScienceSubject.SubjectValue">
             <summary>
             Multiplier for specific Celestial Body/Experiment Situation combination.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.ScienceSubject.Title">
             <summary>
             Title of science subject, displayed in science archives
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.Sensor">
             <summary>
             A sensor, such as a thermometer. Obtained by calling <see cref="P:KRPC.SpaceCenter.Services.Parts.Part.Sensor" />.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Sensor.Equals(KRPC.SpaceCenter.Services.Parts.Sensor)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Sensor.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Sensor.Part">
             <summary>
             The part object for this sensor.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Sensor.Active">
             <summary>
             Whether the sensor is active.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Sensor.Value">
             <summary>
             The current value of the sensor.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.SolarPanel">
             <summary>
             A solar panel. Obtained by calling <see cref="P:KRPC.SpaceCenter.Services.Parts.Part.SolarPanel" />.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.SolarPanel.Equals(KRPC.SpaceCenter.Services.Parts.SolarPanel)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.SolarPanel.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.SolarPanel.Part">
             <summary>
             The part object for this solar panel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.SolarPanel.Deployable">
             <summary>
             Whether the solar panel is deployable.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.SolarPanel.Deployed">
             <summary>
             Whether the solar panel is extended.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.SolarPanel.State">
             <summary>
             The current state of the solar panel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.SolarPanel.EnergyFlow">
             <summary>
             The current amount of energy being generated by the solar panel, in
             units of charge per second.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.SolarPanel.SunExposure">
             <summary>
             The current amount of sunlight that is incident on the solar panel,
             as a percentage. A value between 0 and 1.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.SolarPanelState">
             <summary>
             The state of a solar panel. See <see cref="P:KRPC.SpaceCenter.Services.Parts.SolarPanel.State" />.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.SolarPanelState.Extended">
             <summary>
             Solar panel is fully extended.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.SolarPanelState.Retracted">
             <summary>
             Solar panel is fully retracted.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.SolarPanelState.Extending">
             <summary>
             Solar panel is being extended.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.SolarPanelState.Retracting">
             <summary>
             Solar panel is being retracted.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.SolarPanelState.Broken">
             <summary>
             Solar panel is broken.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.Thruster">
             <summary>
             The component of an <see cref="T:KRPC.SpaceCenter.Services.Parts.Engine" /> or <see cref="T:KRPC.SpaceCenter.Services.Parts.RCS" /> part that generates thrust.
             Can obtained by calling <see cref="P:KRPC.SpaceCenter.Services.Parts.Engine.Thrusters" /> or <see cref="P:KRPC.SpaceCenter.Services.Parts.RCS.Thrusters" />.
             </summary>
             <remarks>
             Engines can consist of multiple thrusters.
             For example, the S3 KS-25x4 "Mammoth" has four rocket nozzels, and so consists of
             four thrusters.
             </remarks>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Thruster.Equals(KRPC.SpaceCenter.Services.Parts.Thruster)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Thruster.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Thruster.Part">
             <summary>
             The <see cref="T:KRPC.SpaceCenter.Services.Parts.Part" /> that contains this thruster.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Thruster.ThrustPosition(KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The position at which the thruster generates thrust, in the given reference frame.
             For gimballed engines, this takes into account the current rotation of the gimbal.
             </summary>
             <returns>The position as a vector.</returns>
             <param name="referenceFrame">The reference frame that the returned
             position vector is in.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Thruster.ThrustDirection(KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The direction of the force generated by the thruster, in the given reference frame.
             This is opposite to the direction in which the thruster expels propellant.
             For gimballed engines, this takes into account the current rotation of the gimbal.
             </summary>
             <returns>The direction as a unit vector.</returns>
             <param name="referenceFrame">The reference frame that the returned
             direction is in.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Thruster.InitialThrustPosition(KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The position at which the thruster generates thrust, when the engine is in its
             initial position (no gimballing), in the given reference frame.
             </summary>
             <returns>The position as a vector.</returns>
             <param name="referenceFrame">The reference frame that the returned
             position vector is in.</param>
             <remarks>
             This position can move when the gimbal rotates. This is because the thrust position and
             gimbal position are not necessarily the same.
             </remarks>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Thruster.InitialThrustDirection(KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The direction of the force generated by the thruster, when the engine is in its
             initial position (no gimballing), in the given reference frame.
             This is opposite to the direction in which the thruster expels propellant.
             </summary>
             <returns>The direction as a unit vector.</returns>
             <param name="referenceFrame">The reference frame that the returned
             direction is in.</param>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Thruster.ThrustReferenceFrame">
             <summary>
             A reference frame that is fixed relative to the thruster and orientated with
             its thrust direction (<see cref="M:KRPC.SpaceCenter.Services.Parts.Thruster.ThrustDirection(KRPC.SpaceCenter.Services.ReferenceFrame)" />).
             For gimballed engines, this takes into account the current rotation of the gimbal.
             <list type="bullet">
             <item><description>
             The origin is at the position of thrust for this thruster
             (<see cref="M:KRPC.SpaceCenter.Services.Parts.Thruster.ThrustPosition(KRPC.SpaceCenter.Services.ReferenceFrame)" />).</description></item>
             <item><description>
             The axes rotate with the thrust direction.
             This is the direction in which the thruster expels propellant, including any gimballing.
             </description></item>
             <item><description>The y-axis points along the thrust direction.</description></item>
             <item><description>The x-axis and z-axis are perpendicular to the thrust direction.
             </description></item>
             </list>
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Thruster.Gimballed">
             <summary>
             Whether the thruster is gimballed.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Thruster.GimbalPosition(KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             Position around which the gimbal pivots.
             </summary>
             <returns>The position as a vector.</returns>
             <param name="referenceFrame">The reference frame that the returned
             position vector is in.</param>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Thruster.GimbalAngle">
             <summary>
             The current gimbal angle in the pitch, roll and yaw axes, in degrees.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Thruster.WorldTransform">
             <summary>
             Transform of the thrust vector in world space.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Thruster.WorldThrustDirection">
             <summary>
             The direction of the thrust vector in world space.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Thruster.WorldThrustPerpendicularDirection">
             <summary>
             A direction perpendicular to <see cref="P:KRPC.SpaceCenter.Services.Parts.Thruster.WorldThrustDirection" />.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Thruster.StashGimbalRotation">
             <summary>
             Save the gimbal rotation and set it to its initial position.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Thruster.RestoreGimbalRotation">
             <summary>
             Restore the previously saved gimbal rotation.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.Wheel">
             <summary>
             A wheel. Includes landing gear and rover wheels.
             Obtained by calling <see cref="P:KRPC.SpaceCenter.Services.Parts.Part.Wheel" />.
             Can be used to control the motors, steering and deployment of wheels, among other things.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Wheel.Equals(KRPC.SpaceCenter.Services.Parts.Wheel)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Parts.Wheel.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Wheel.Part">
             <summary>
             The part object for this wheel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Wheel.State">
             <summary>
             The current state of the wheel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Wheel.Radius">
             <summary>
             Radius of the wheel, in meters.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Wheel.Grounded">
             <summary>
             Whether the wheel is touching the ground.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Wheel.HasBrakes">
             <summary>
             Whether the wheel has brakes.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Wheel.Brakes">
             <summary>
             The braking force, as a percentage of maximum, when the brakes are applied.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Wheel.AutoFrictionControl">
             <summary>
             Whether automatic friction control is enabled.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Wheel.ManualFrictionControl">
             <summary>
             Manual friction control value. Only has an effect if automatic friction control is disabled.
             A value between 0 and 5 inclusive.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Wheel.Deployable">
             <summary>
             Whether the wheel is deployable.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Wheel.Deployed">
             <summary>
             Whether the wheel is deployed.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Wheel.Powered">
             <summary>
             Whether the wheel is powered by a motor.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Wheel.MotorEnabled">
             <summary>
             Whether the motor is enabled.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Wheel.MotorInverted">
             <summary>
             Whether the direction of the motor is inverted.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Wheel.MotorState">
             <summary>
             Whether the direction of the motor is inverted.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Wheel.MotorOutput">
             <summary>
             The output of the motor. This is the torque currently being generated, in Newton meters.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Wheel.TractionControlEnabled">
             <summary>
             Whether automatic traction control is enabled.
             A wheel only has traction control if it is powered.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Wheel.TractionControl">
             <summary>
             Setting for the traction control.
             Only takes effect if the wheel has automatic traction control enabled.
             A value between 0 and 5 inclusive.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Wheel.DriveLimiter">
             <summary>
             Manual setting for the motor limiter.
             Only takes effect if the wheel has automatic traction control disabled.
             A value between 0 and 100 inclusive.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Wheel.Steerable">
             <summary>
             Whether the wheel has steering.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Wheel.SteeringEnabled">
             <summary>
             Whether the wheel steering is enabled.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Wheel.SteeringInverted">
             <summary>
             Whether the wheel steering is inverted.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Wheel.HasSuspension">
             <summary>
             Whether the wheel has suspension.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Wheel.SuspensionSpringStrength">
             <summary>
             Suspension spring strength, as set in the editor.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Wheel.SuspensionDamperStrength">
             <summary>
             Suspension damper strength, as set in the editor.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Wheel.Broken">
             <summary>
             Whether the wheel is broken.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Wheel.Repairable">
             <summary>
             Whether the wheel is repairable.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Wheel.Stress">
             <summary>
             Current stress on the wheel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Wheel.StressTolerance">
             <summary>
             Stress tolerance of the wheel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Wheel.StressPercentage">
             <summary>
             Current stress on the wheel as a percentage of its stress tolerance.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Wheel.Deflection">
             <summary>
             Current deflection of the wheel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Parts.Wheel.Slip">
             <summary>
             Current slip of the wheel.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Parts.WheelState">
             <summary>
             The state of a wheel. See <see cref="P:KRPC.SpaceCenter.Services.Parts.Wheel.State" />.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.WheelState.Deployed">
             <summary>
             Wheel is fully deployed.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.WheelState.Retracted">
             <summary>
             Wheel is fully retracted.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.WheelState.Deploying">
             <summary>
             Wheel is being deployed.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.WheelState.Retracting">
             <summary>
             Wheel is being retracted.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.Parts.WheelState.Broken">
             <summary>
             Wheel is broken.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.ReferenceFrame">
             <summary>
             Represents a reference frame for positions, rotations and
             velocities. Contains:
             <list type="bullet">
             <item><description>The position of the origin.</description></item>
             <item><description>The directions of the x, y and z axes.</description></item>
             <item><description>The linear velocity of the frame.</description></item>
             <item><description>The angular velocity of the frame.</description></item>
             </list>
             </summary>
             <remarks>
             This class does not contain any properties or methods. It is only
             used as a parameter to other functions.
             </remarks>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.ReferenceFrame.Equals(KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.ReferenceFrame.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ReferenceFrame.Type">
             <summary>
             The type of the reference frame.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ReferenceFrame.Body">
             <summary>
             The celestial body.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ReferenceFrame.Vessel">
             <summary>
             The vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ReferenceFrame.Node">
             <summary>
             The node.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ReferenceFrame.Part">
             <summary>
             The part.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ReferenceFrame.DockingPort">
             <summary>
             The docking port.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ReferenceFrame.Thruster">
             <summary>
             The thruster.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ReferenceFrame.Transform">
             <summary>
             The transform for the object that this reference frame is attached to.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.ReferenceFrame.CreateRelative(KRPC.SpaceCenter.Services.ReferenceFrame,KRPC.Utils.Tuple{System.Double,System.Double,System.Double},KRPC.Utils.Tuple{System.Double,System.Double,System.Double,System.Double},KRPC.Utils.Tuple{System.Double,System.Double,System.Double},KRPC.Utils.Tuple{System.Double,System.Double,System.Double})">
             <summary>
             Create a relative reference frame. This is a custom reference frame
             whose components offset the components of a parent reference frame.
             </summary>
             <param name="referenceFrame">The parent reference frame on which to
             base this reference frame.</param>
             <param name="position">The offset of the position of the origin,
             as a position vector. Defaults to <math>(0, 0, 0)</math></param>
             <param name="rotation">The rotation to apply to the parent frames rotation,
             as a quaternion of the form <math>(x, y, z, w)</math>.
             Defaults to <math>(0, 0, 0, 1)</math> (i.e. no rotation)</param>
             <param name="velocity">The linear velocity to offset the parent frame by,
             as a vector pointing in the direction of travel, whose magnitude is the speed in
             meters per second. Defaults to <math>(0, 0, 0)</math>.</param>
             <param name="angularVelocity">The angular velocity to offset the parent frame by,
             as a vector. This vector points in the direction of the axis of rotation,
             and its magnitude is the speed of the rotation in radians per second.
             Defaults to <math>(0, 0, 0)</math>.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.ReferenceFrame.CreateHybrid(KRPC.SpaceCenter.Services.ReferenceFrame,KRPC.SpaceCenter.Services.ReferenceFrame,KRPC.SpaceCenter.Services.ReferenceFrame,KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             Create a hybrid reference frame. This is a custom reference frame
             whose components inherited from other reference frames.
             </summary>
             <param name="position">The reference frame providing the position of the origin.</param>
             <param name="rotation">The reference frame providing the rotation of the frame.</param>
             <param name="velocity">The reference frame providing the linear velocity of the frame.
             </param>
             <param name="angularVelocity">The reference frame providing the angular velocity
             of the frame.</param>
             <remarks>
             The <paramref name="position" /> reference frame is required but all other
             reference frames are optional. If omitted, they are set to the
             <paramref name="position" /> reference frame.
             </remarks>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ReferenceFrame.Position">
             <summary>
             Returns the position of the origin of the reference frame in world-space.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ReferenceFrame.Rotation">
             <summary>
             Returns the rotation of the given frame of reference, relative to world space.
             Applying the rotation to a vector in reference-frame-space produces the corresponding
             vector in world-space.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ReferenceFrame.Up">
             <summary>
             Returns the up vector of the reference frame in world coordinates.
             The direction in which the y-axis points.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ReferenceFrame.Forward">
             <summary>
             Returns the forward vector of the reference frame in world coordinates.
             The direction in which the z axis points.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.ReferenceFrame.ToNorthPole(Vessel)">
             <summary>
             Vector from given vessel to north pole of body being orbited, in world space.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ReferenceFrame.UpNotNormalized">
             <summary>
             Returns the up vector for the reference frame in world coordinates.
             The direction in which the y-axis points.
             The vector is not normalized.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ReferenceFrame.ForwardNotNormalized">
             <summary>
             Returns the forward vector of the reference frame in world coordinates.
             The direction in which the z-axis points.
             The vector is not normalized.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ReferenceFrame.Velocity">
             <summary>
             Returns the velocity of the reference frame in world-space.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ReferenceFrame.AngularVelocity">
             <summary>
             Returns the rotational velocity of the reference frame in world-space.
             Vector points in direction of axis of rotation
             Vector's magnitude is the speed of rotation in radians per second
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.ReferenceFrame.AngularVelocityAt(Vector3d)">
             <summary>
             Get the linear velocity at the given position that results from the reference frames angular velocity.
             Position is in reference frame space.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.ReferenceFrame.PositionFromWorldSpace(Vector3d)">
             <summary>
             Convert the given position in world space, to a position in this reference frame.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.ReferenceFrame.PositionToWorldSpace(Vector3d)">
             <summary>
             Convert the given position in this reference frame, to a position in world space.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.ReferenceFrame.DirectionFromWorldSpace(Vector3d)">
             <summary>
             Convert the given direction in world space, to a direction in this reference frame.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.ReferenceFrame.DirectionToWorldSpace(Vector3d)">
             <summary>
             Convert the given direction in this reference frame, to a direction in world space.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.ReferenceFrame.RotationFromWorldSpace(UnityEngine.QuaternionD)">
             <summary>
             Convert the given rotation in world space, to a rotation in this reference frame.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.ReferenceFrame.RotationToWorldSpace(UnityEngine.QuaternionD)">
             <summary>
             Convert the given rotation in this reference frame, to a rotation in world space.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.ReferenceFrame.VelocityFromWorldSpace(Vector3d,Vector3d)">
             <summary>
             Convert the given velocity at the given position in world space,
             to a velocity in this reference frame.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.ReferenceFrame.VelocityToWorldSpace(Vector3d,Vector3d)">
             <summary>
             Convert the given velocity at the given position in this reference frame,
             to a velocity in world space.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.ReferenceFrame.AngularVelocityFromWorldSpace(Vector3d)">
             <summary>
             Convert the given angular velocity in world space,
             to an angular velocity in this reference frame.
             This only make sense when considering an object that
             is rotating at the origin of the reference frame.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.ReferenceFrame.AngularVelocityToWorldSpace(Vector3d)">
             <summary>
             Convert the given angular velocity at the given position in this reference frame,
             to an angular velocity in world space.
             This only make sense when considering an object that is rotating at the origin
             of the reference frame.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.ReferenceFrameType">
             <summary>
             Type of a reference frame.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ReferenceFrameType.CelestialBody">
             <summary>
             Reference frame centered on and rotating with a celestial body.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ReferenceFrameType.CelestialBodyNonRotating">
             <summary>
             Reference frame centered on a celestial body with zero angular velocity.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ReferenceFrameType.CelestialBodyOrbital">
             <summary>
             Centered on a celestial body and oriented with its orbital
             directions around the sun.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ReferenceFrameType.Vessel">
             <summary>
             Centered on and rotating with a vessel.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ReferenceFrameType.VesselOrbital">
             <summary>
             Centered on a vessel and oriented with its orbital directions.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ReferenceFrameType.VesselSurface">
             <summary>
             Centered on a vessel and oriented with its surface directions.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ReferenceFrameType.VesselSurfaceVelocity">
             <summary>
             Centered on a vessel and oriented with its surface directions,
             including rotation of the parent body.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ReferenceFrameType.Maneuver">
             <summary>
             Centered on a maneuver node and oriented with the burn vector.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ReferenceFrameType.ManeuverOrbital">
             <summary>
             Centered on a maneuver node and oriented with the burn vector.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ReferenceFrameType.Part">
             <summary>
             Centered on and oriented with a part.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ReferenceFrameType.PartCenterOfMass">
             <summary>
             Centered on and oriented with a parts center of mass.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ReferenceFrameType.DockingPort">
             <summary>
             Centered on a docking port node and oriented with the
             direction the node points.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ReferenceFrameType.Thrust">
             <summary>
             Centered on a thruster (e.g. an engine nozzle) and
             oriented with the direction of thrust.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ReferenceFrameType.Relative">
             <summary>
             Centered and rotated by fixed quantities relative to another reference frame.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ReferenceFrameType.Hybrid">
             <summary>
             Centered and rotated based on quantities from other reference frames.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Resource">
             <summary>
             An individual resource stored within a part.
             Created using methods in the <see cref="T:KRPC.SpaceCenter.Services.Resources" /> class.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Resource.Equals(KRPC.SpaceCenter.Services.Resource)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Resource.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Resource.InternalPart">
             <summary>
             The KSP part.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Resource.InternalResource">
             <summary>
             The KSP part resource.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Resource.Name">
             <summary>
             The name of the resource.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Resource.Part">
             <summary>
             The part containing the resource.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Resource.Max">
             <summary>
             The total amount of the resource that can be stored in the part.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Resource.Amount">
             <summary>
             The amount of the resource that is currently stored in the part.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Resource.Density">
             <summary>
             The density of the resource, in <math>kg/l</math>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Resource.FlowMode">
             <summary>
             The flow mode of the resource.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Resource.Enabled">
             <summary>
             Whether use of this resource is enabled.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.ResourceFlowMode">
             <summary>
             The way in which a resource flows between parts. See <see cref="M:KRPC.SpaceCenter.Services.Resources.FlowMode(System.String)" />.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ResourceFlowMode.Vessel">
             <summary>
             The resource flows to any part in the vessel. For example, electric charge.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ResourceFlowMode.Stage">
             <summary>
             The resource flows from parts in the first stage, followed by the second,
             and so on. For example, mono-propellant.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ResourceFlowMode.Adjacent">
             <summary>
             The resource flows between adjacent parts within the vessel. For example,
             liquid fuel or oxidizer.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.ResourceFlowMode.None">
             <summary>
             The resource does not flow. For example, solid fuel.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.ResourceTransfer">
             <summary>
             Transfer resources between parts.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.ResourceTransfer.Start(KRPC.SpaceCenter.Services.Parts.Part,KRPC.SpaceCenter.Services.Parts.Part,System.String,System.Single)">
             <summary>
             Start transferring a resource transfer between a pair of parts. The transfer will move
             at most <paramref name="maxAmount" /> units of the resource, depending on how much of
             the resource is available in the source part and how much storage is available in the
             destination part.
             Use <see cref="P:KRPC.SpaceCenter.Services.ResourceTransfer.Complete" /> to check if the transfer is complete.
             Use <see cref="P:KRPC.SpaceCenter.Services.ResourceTransfer.Amount" /> to see how much of the resource has been transferred.
             </summary>
             <param name="fromPart">The part to transfer to.</param>
             <param name="toPart">The part to transfer from.</param>
             <param name="resource">The name of the resource to transfer.</param>
             <param name="maxAmount">The maximum amount of resource to transfer.</param>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ResourceTransfer.FromPart">
             <summary>
             Part the resource is being transferred from.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ResourceTransfer.ToPart">
             <summary>
             Part the resource is being transferred to.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ResourceTransfer.Resource">
             <summary>
             The resource being transferred.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ResourceTransfer.TotalAmount">
             <summary>
             The total amount to be transferred.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ResourceTransfer.Complete">
             <summary>
             Whether the transfer has completed.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.ResourceTransfer.Amount">
             <summary>
             The amount of the resource that has been transferred.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.ResourceTransfer.Update(System.Single)">
             <summary>
             Update the transfer. Called once per fixed update.
             Transfers at most transferRate of resource from the source part to the
             destination part, whilst respecting the amount of resource available in the source
             and amount of storage in the destination.
             Decrements maxAmount ready for the next update.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Resources">
             <summary>
             Represents the collection of resources stored in a vessel, stage or part.
             Created by calling <see cref="P:KRPC.SpaceCenter.Services.Vessel.Resources" />,
             <see cref="M:KRPC.SpaceCenter.Services.Vessel.ResourcesInDecoupleStage(System.Int32,System.Boolean)" /> or
             <see cref="P:KRPC.SpaceCenter.Services.Parts.Part.Resources" />.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Resources.Equals(KRPC.SpaceCenter.Services.Resources)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Resources.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Resources.InternalVessel">
             <summary>
             The KSP vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Resources.InternalPart">
             <summary>
             The KSP part.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Resources.All">
             <summary>
             All the individual resources that can be stored.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Resources.WithResource(System.String)">
             <summary>
             All the individual resources with the given name that can be stored.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Resources.Names">
             <summary>
             A list of resource names that can be stored.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Resources.HasResource(System.String)">
             <summary>
             Check whether the named resource can be stored.
             </summary>
             <param name="name">The name of the resource.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Resources.Max(System.String)">
             <summary>
             Returns the amount of a resource that can be stored.
             </summary>
             <param name="name">The name of the resource.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Resources.Amount(System.String)">
             <summary>
             Returns the amount of a resource that is currently stored.
             </summary>
             <param name="name">The name of the resource.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Resources.Density(System.String)">
             <summary>
             Returns the density of a resource, in <math>kg/l</math>.
             </summary>
             <param name="name">The name of the resource.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Resources.FlowMode(System.String)">
             <summary>
             Returns the flow mode of a resource.
             </summary>
             <param name="name">The name of the resource.</param>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Resources.Enabled">
             <summary>
             Whether use of all the resources are enabled.
             </summary>
             <remarks>
             This is <c>true</c> if all of the resources are enabled.
             If any of the resources are not enabled, this is <c>false</c>.
             </remarks>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.SASMode">
             <summary>
             The behavior of the SAS auto-pilot. See <see cref="P:KRPC.SpaceCenter.Services.AutoPilot.SASMode" />.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.SASMode.StabilityAssist">
             <summary>
             Stability assist mode. Dampen out any rotation.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.SASMode.Maneuver">
             <summary>
             Point in the burn direction of the next maneuver node.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.SASMode.Prograde">
             <summary>
             Point in the prograde direction.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.SASMode.Retrograde">
             <summary>
             Point in the retrograde direction.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.SASMode.Normal">
             <summary>
             Point in the orbit normal direction.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.SASMode.AntiNormal">
             <summary>
             Point in the orbit anti-normal direction.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.SASMode.Radial">
             <summary>
             Point in the orbit radial direction.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.SASMode.AntiRadial">
             <summary>
             Point in the orbit anti-radial direction.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.SASMode.Target">
             <summary>
             Point in the direction of the current target.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.SASMode.AntiTarget">
             <summary>
             Point away from the current target.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.SpaceCenter">
             <summary>
             Provides functionality to interact with Kerbal Space Program. This includes controlling
             the active vessel, managing its resources, planning maneuver nodes and auto-piloting.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.SpaceCenter.GameMode">
             <summary>
             The current mode the game is in.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.SpaceCenter.Science">
             <summary>
             The current amount of science.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.SpaceCenter.Funds">
             <summary>
             The current amount of funds.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.SpaceCenter.Reputation">
             <summary>
             The current amount of reputation.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.SpaceCenter.ActiveVessel">
             <summary>
             The currently active vessel.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.SpaceCenter.WaitForVesselSwitch(System.Int32)">
             <summary>
             Wait until 10 frames after the active vessel is unpacked.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.SpaceCenter.Vessels">
             <summary>
             A list of all the vessels in the game.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.SpaceCenter.Bodies">
             <summary>
             A dictionary of all celestial bodies (planets, moons, etc.) in the game,
             keyed by the name of the body.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.SpaceCenter.TargetBody">
             <summary>
             The currently targeted celestial body.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.SpaceCenter.TargetVessel">
             <summary>
             The currently targeted vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.SpaceCenter.TargetDockingPort">
             <summary>
             The currently targeted docking port.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.SpaceCenter.ClearTarget">
             <summary>
             Clears the current target.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.SpaceCenter.WaypointManager">
             <summary>
             The waypoint manager.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.SpaceCenter.ContractManager">
             <summary>
             The contract manager.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.SpaceCenter.LaunchableVessels(System.String)">
             <summary>
             Returns a list of vessels from the given <paramref name="craftDirectory" />
             that can be launched.
             </summary>
             <param name="craftDirectory">Name of the directory in the current saves
             "Ships" directory. For example <c>"VAB"</c> or <c>"SPH"</c>.</param>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.SpaceCenter.LaunchConfig">
             <summary>
             Helper class for launching a new vessel.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.SpaceCenter.LaunchVessel(System.String,System.String,System.String,System.Boolean)">
             <summary>
             Launch a vessel.
             </summary>
             <param name="craftDirectory">Name of the directory in the current saves
             "Ships" directory, that contains the craft file.
             For example <c>"VAB"</c> or <c>"SPH"</c>.</param>
             <param name="name">Name of the vessel to launch. This is the name of the ".craft" file
             in the save directory, without the ".craft" file extension.</param>
             <param name="launchSite">Name of the launch site. For example <c>"LaunchPad"</c> or
             <c>"Runway"</c>.</param>
             <param name="recover">If true and there is a vessel on the launch site,
             recover it before launching.</param>
             <remarks>
             Throws an exception if any of the games pre-flight checks fail.
             </remarks>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.SpaceCenter.WaitForVesselPreFlightComplete(KRPC.SpaceCenter.Services.SpaceCenter.LaunchConfig)">
             <summary>
             Wait until pre-flight checks for new vessel are complete.
             </summary>
             <param name="config">Config.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.SpaceCenter.WaitForVesselRecovery(KRPC.SpaceCenter.Services.SpaceCenter.LaunchConfig)">
             <summary>
             Wait until vessels on the launchpad have been recovered, then launch new vessel.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.SpaceCenter.LaunchVesselFromVAB(System.String,System.Boolean)">
             <summary>
             Launch a new vessel from the VAB onto the launchpad.
             </summary>
             <param name="name">Name of the vessel to launch.</param>
             <param name="recover">If true and there is a vessel on the launch pad,
             recover it before launching.</param>
             <remarks>
             This is equivalent to calling <see cref="M:KRPC.SpaceCenter.Services.SpaceCenter.LaunchVessel(System.String,System.String,System.String,System.Boolean)" /> with the craft directory
             set to "VAB" and the launch site set to "LaunchPad".
             Throws an exception if any of the games pre-flight checks fail.
             </remarks>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.SpaceCenter.LaunchVesselFromSPH(System.String,System.Boolean)">
             <summary>
             Launch a new vessel from the SPH onto the runway.
             </summary>
             <param name="name">Name of the vessel to launch.</param>
             <param name="recover">If true and there is a vessel on the runway,
             recover it before launching.</param>
             <remarks>
             This is equivalent to calling <see cref="M:KRPC.SpaceCenter.Services.SpaceCenter.LaunchVessel(System.String,System.String,System.String,System.Boolean)" /> with the craft directory
             set to "SPH" and the launch site set to "Runway".
             Throws an exception if any of the games pre-flight checks fail.
             </remarks>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.SpaceCenter.Save(System.String)">
             <summary>
             Save the game with a given name.
             This will create a save file called <c>name.sfs</c> in the folder of the
             current save game.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.SpaceCenter.Load(System.String)">
             <summary>
             Load the game with the given name.
             This will create a load a save file called <c>name.sfs</c> from the folder of the
             current save game.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.SpaceCenter.Quicksave">
             <summary>
             Save a quicksave.
             </summary>
             <remarks>
             This is the same as calling <see cref="M:KRPC.SpaceCenter.Services.SpaceCenter.Save(System.String)" /> with the name "quicksave".
             </remarks>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.SpaceCenter.Quickload">
             <summary>
             Load a quicksave.
             </summary>
             <remarks>
             This is the same as calling <see cref="M:KRPC.SpaceCenter.Services.SpaceCenter.Load(System.String)" /> with the name "quicksave".
             </remarks>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.SpaceCenter.Camera">
             <summary>
             An object that can be used to control the camera.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.SpaceCenter.UIVisible">
             <summary>
             Whether the UI is visible.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.SpaceCenter.Navball">
             <summary>
             Whether the navball is visible.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.SpaceCenter.UT">
             <summary>
             The current universal time in seconds.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.SpaceCenter.G">
             <summary>
             The value of the <a href="https://en.wikipedia.org/wiki/Gravitational_constant">
             gravitational constant</a> G in <math>N(m/kg)^2</math>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.SpaceCenter.WarpMode">
             <summary>
             The current time warp mode. Returns <see cref="F:KRPC.SpaceCenter.WarpMode.None" /> if time
             warp is not active, <see cref="F:KRPC.SpaceCenter.WarpMode.Rails" /> if regular "on-rails" time warp
             is active, or <see cref="F:KRPC.SpaceCenter.WarpMode.Physics" /> if physical time warp is active.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.SpaceCenter.WarpRate">
             <summary>
             The current warp rate. This is the rate at which time is passing for
             either on-rails or physical time warp. For example, a value of 10 means
             time is passing 10x faster than normal. Returns 1 if time warp is not
             active.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.SpaceCenter.WarpFactor">
             <summary>
             The current warp factor. This is the index of the rate at which time
             is passing for either regular "on-rails" or physical time warp. Returns 0
             if time warp is not active. When in on-rails time warp, this is equal to
             <see cref="P:KRPC.SpaceCenter.Services.SpaceCenter.RailsWarpFactor" />, and in physics time warp, this is equal to
             <see cref="P:KRPC.SpaceCenter.Services.SpaceCenter.PhysicsWarpFactor" />.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.SpaceCenter.RailsWarpFactor">
             <summary>
             The time warp rate, using regular "on-rails" time warp. A value between
             0 and 7 inclusive. 0 means no time warp. Returns 0 if physical time warp
             is active.
            
             If requested time warp factor cannot be set, it will be set to the next
             lowest possible value. For example, if the vessel is too close to a
             planet. See <a href="https://wiki.kerbalspaceprogram.com/wiki/Time_warp">
             the KSP wiki</a> for details.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.SpaceCenter.PhysicsWarpFactor">
             <summary>
             The physical time warp rate. A value between 0 and 3 inclusive. 0 means
             no time warp. Returns 0 if regular "on-rails" time warp is active.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.SpaceCenter.CanRailsWarpAt(System.Int32)">
             <summary>
             Returns <c>true</c> if regular "on-rails" time warp can be used, at the specified warp
             <paramref name="factor" />. The maximum time warp rate is limited by various things,
             including how close the active vessel is to a planet. See
             <a href="https://wiki.kerbalspaceprogram.com/wiki/Time_warp">the KSP wiki</a>
             for details.
             </summary>
             <param name="factor">The warp factor to check.</param>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.SpaceCenter.MaximumRailsWarpFactor">
             <summary>
             The current maximum regular "on-rails" warp factor that can be set.
             A value between 0 and 7 inclusive. See
             <a href="https://wiki.kerbalspaceprogram.com/wiki/Time_warp">the KSP wiki</a>
             for details.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.SpaceCenter.WarpTo(System.Double,System.Single,System.Single)">
             <summary>
             Uses time acceleration to warp forward to a time in the future, specified
             by universal time <paramref name="ut" />. This call blocks until the desired
             time is reached. Uses regular "on-rails" or physical time warp as appropriate.
             For example, physical time warp is used when the active vessel is traveling
             through an atmosphere. When using regular "on-rails" time warp, the warp
             rate is limited by <paramref name="maxRailsRate" />, and when using physical
             time warp, the warp rate is limited by <paramref name="maxPhysicsRate" />.
             </summary>
             <param name="ut">The universal time to warp to, in seconds.</param>
             <param name="maxRailsRate">The maximum warp rate in regular "on-rails" time warp.
             </param>
             <param name="maxPhysicsRate">The maximum warp rate in physical time warp.</param>
             <returns>When the time warp is complete.</returns>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.SpaceCenter.RailsWarpAtRate(System.Single)">
             <summary>
             Warp using regular "on-rails" time warp at the given rate.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.SpaceCenter.DecreaseRailsWarp">
             <summary>
             Decrease the regular "on-rails" time warp factor.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.SpaceCenter.IncreaseRailsWarp">
             <summary>
             Increase the regular "on-rails" time warp factor.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.SpaceCenter.PhysicsWarpAtRate(System.Single)">
             <summary>
             Warp using physics time warp at the given rate.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.SpaceCenter.DecreasePhysicsWarp">
             <summary>
             Decrease the physics time warp factor.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.SpaceCenter.IncreasePhysicsWarp">
             <summary>
             Decrease the physics time warp factor.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.SpaceCenter.TransformPosition(KRPC.Utils.Tuple{System.Double,System.Double,System.Double},KRPC.SpaceCenter.Services.ReferenceFrame,KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             Converts a position from one reference frame to another.
             </summary>
             <param name="position">Position, as a vector, in reference frame
             <paramref name="from" />.</param>
             <param name="from">The reference frame that the position is in.</param>
             <param name="to">The reference frame to covert the position to.</param>
             <returns>The corresponding position, as a vector, in reference frame
             <paramref name="to" />.</returns>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.SpaceCenter.TransformDirection(KRPC.Utils.Tuple{System.Double,System.Double,System.Double},KRPC.SpaceCenter.Services.ReferenceFrame,KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             Converts a direction from one reference frame to another.
             </summary>
             <param name="direction">Direction, as a vector, in reference frame
             <paramref name="from" />. </param>
             <param name="from">The reference frame that the direction is in.</param>
             <param name="to">The reference frame to covert the direction to.</param>
             <returns>The corresponding direction, as a vector, in reference frame
             <paramref name="to" />.</returns>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.SpaceCenter.TransformRotation(KRPC.Utils.Tuple{System.Double,System.Double,System.Double,System.Double},KRPC.SpaceCenter.Services.ReferenceFrame,KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             Converts a rotation from one reference frame to another.
             </summary>
             <param name="rotation">Rotation, as a quaternion of the form <math>(x, y, z, w)</math>,
             in reference frame <paramref name="from" />.</param>
             <param name="from">The reference frame that the rotation is in.</param>
             <param name="to">The reference frame to covert the rotation to.</param>
             <returns>The corresponding rotation, as a quaternion of the form
             <math>(x, y, z, w)</math>, in reference frame <paramref name="to" />.</returns>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.SpaceCenter.TransformVelocity(KRPC.Utils.Tuple{System.Double,System.Double,System.Double},KRPC.Utils.Tuple{System.Double,System.Double,System.Double},KRPC.SpaceCenter.Services.ReferenceFrame,KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             Converts a velocity (acting at the specified position) from one reference frame
             to another. The position is required to take the relative angular velocity of the
             reference frames into account.
             </summary>
             <param name="position">Position, as a vector, in reference frame
             <paramref name="from" />.</param>
             <param name="velocity">Velocity, as a vector that points in the direction of travel and
             whose magnitude is the speed in meters per second, in reference frame
             <paramref name="from" />.</param>
             <param name="from">The reference frame that the position and velocity are in.</param>
             <param name="to">The reference frame to covert the velocity to.</param>
             <returns>The corresponding velocity, as a vector, in reference frame
             <paramref name="to" />.</returns>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.SpaceCenter.RaycastDistance(KRPC.Utils.Tuple{System.Double,System.Double,System.Double},KRPC.Utils.Tuple{System.Double,System.Double,System.Double},KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             Cast a ray from a given position in a given direction, and return the distance to the hit point.
             If no hit occurs, returns infinity.
             </summary>
             <param name="position">Position, as a vector, of the origin of the ray.</param>
             <param name="direction">Direction of the ray, as a unit vector.</param>
             <param name="referenceFrame">The reference frame that the position and direction are in.</param>
             <returns>The distance to the hit, in meters, or infinity if there was no hit.</returns>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.SpaceCenter.RaycastPart(KRPC.Utils.Tuple{System.Double,System.Double,System.Double},KRPC.Utils.Tuple{System.Double,System.Double,System.Double},KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             Cast a ray from a given position in a given direction, and return the part that it hits.
             If no hit occurs, returns <c>null</c>.
             </summary>
             <param name="position">Position, as a vector, of the origin of the ray.</param>
             <param name="direction">Direction of the ray, as a unit vector.</param>
             <param name="referenceFrame">The reference frame that the position and direction are in.</param>
             <returns>The part that was hit or <c>null</c> if there was no hit.</returns>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.SpaceCenter.FARAvailable">
             <summary>
             Whether <a href="https://forum.kerbalspaceprogram.com/index.php?/topic/19321-130-ferram-aerospace-research-v0159-liebe-82117/">Ferram Aerospace Research</a> is installed.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.SpeedMode">
             <summary>
             The mode of the speed reported in the navball.
             See <see cref="P:KRPC.SpaceCenter.Services.Control.SpeedMode" />.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.SpeedMode.Orbit">
             <summary>
             Speed is relative to the vessel's orbit.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.SpeedMode.Surface">
             <summary>
             Speed is relative to the surface of the body being orbited.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.SpeedMode.Target">
             <summary>
             Speed is relative to the current target.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Vessel">
             <summary>
             These objects are used to interact with vessels in KSP. This includes getting
             orbital and flight data, manipulating control inputs and managing resources.
             Created using <see cref="P:KRPC.SpaceCenter.Services.SpaceCenter.ActiveVessel" /> or <see cref="P:KRPC.SpaceCenter.Services.SpaceCenter.Vessels" />.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Vessel.#ctor(Vessel)">
             <summary>
             Construct from a KSP vessel object.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Vessel.#ctor(System.Guid)">
             <summary>
             Construct from a KSP vessel id.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Vessel.Equals(KRPC.SpaceCenter.Services.Vessel)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Vessel.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.Id">
             <summary>
             The KSP vessel id.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.InternalVessel">
             <summary>
             The KSP vessel object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.Name">
             <summary>
             The name of the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.Type">
             <summary>
             The type of the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.Situation">
             <summary>
             The situation the vessel is in.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.Recoverable">
             <summary>
             Whether the vessel is recoverable.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Vessel.Recover">
             <summary>
             Recover the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.MET">
             <summary>
             The mission elapsed time in seconds.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.Biome">
             <summary>
             The name of the biome the vessel is currently in.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Vessel.Flight(KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             Returns a <see cref="T:KRPC.SpaceCenter.Services.Flight" /> object that can be used to get flight
             telemetry for the vessel, in the specified reference frame.
             </summary>
             <param name="referenceFrame">
             Reference frame. Defaults to the vessel's surface reference frame
             (<see cref="P:KRPC.SpaceCenter.Services.Vessel.SurfaceReferenceFrame" />).
             </param>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.Orbit">
             <summary>
             The current orbit of the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.Control">
             <summary>
             Returns a <see cref="T:KRPC.SpaceCenter.Services.Control" /> object that can be used to manipulate
             the vessel's control inputs. For example, its pitch/yaw/roll controls,
             RCS and thrust.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.Comms">
             <summary>
             Returns a <see cref="T:KRPC.SpaceCenter.Services.Comms" /> object that can be used to interact
             with CommNet for this vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.AutoPilot">
             <summary>
             An <see cref="T:KRPC.SpaceCenter.Services.AutoPilot" /> object, that can be used to perform
             simple auto-piloting of the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.CrewCapacity">
             <summary>
             The number of crew that can occupy the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.CrewCount">
             <summary>
             The number of crew that are occupying the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.Crew">
             <summary>
             The crew in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.Resources">
             <summary>
             A <see cref="T:KRPC.SpaceCenter.Services.Resources" /> object, that can used to get information
             about resources stored in the vessel.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Vessel.ResourcesInDecoupleStage(System.Int32,System.Boolean)">
             <summary>
             Returns a <see cref="T:KRPC.SpaceCenter.Services.Resources" /> object, that can used to get
             information about resources stored in a given <paramref name="stage" />.
             </summary>
             <param name="stage">Get resources for parts that are decoupled in this stage.</param>
             <param name="cumulative">When <c>false</c>, returns the resources for parts
             decoupled in just the given stage. When <c>true</c> returns the resources decoupled in
             the given stage and all subsequent stages combined.</param>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.Parts">
             <summary>
             A <see cref="T:KRPC.SpaceCenter.Services.Parts.Parts" /> object, that can used to interact with the parts that make up this vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.Mass">
             <summary>
             The total mass of the vessel, including resources, in kg.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.DryMass">
             <summary>
             The total mass of the vessel, excluding resources, in kg.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.Thrust">
             <summary>
             The total thrust currently being produced by the vessel's engines, in
             Newtons. This is computed by summing <see cref="P:KRPC.SpaceCenter.Services.Parts.Engine.Thrust" /> for
             every engine in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.AvailableThrust">
             <summary>
             Gets the total available thrust that can be produced by the vessel's
             active engines, in Newtons. This is computed by summing
             <see cref="P:KRPC.SpaceCenter.Services.Parts.Engine.AvailableThrust" /> for every active engine in the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.MaxThrust">
             <summary>
             The total maximum thrust that can be produced by the vessel's active
             engines, in Newtons. This is computed by summing
             <see cref="P:KRPC.SpaceCenter.Services.Parts.Engine.MaxThrust" /> for every active engine.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.MaxVacuumThrust">
             <summary>
             The total maximum thrust that can be produced by the vessel's active
             engines when the vessel is in a vacuum, in Newtons. This is computed by
             summing <see cref="P:KRPC.SpaceCenter.Services.Parts.Engine.MaxVacuumThrust" /> for every active engine.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.SpecificImpulse">
             <summary>
             The combined specific impulse of all active engines, in seconds. This is computed using the formula
             <a href="https://wiki.kerbalspaceprogram.com/wiki/Specific_impulse#Multiple_engines">described here</a>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.VacuumSpecificImpulse">
             <summary>
             The combined vacuum specific impulse of all active engines, in seconds. This is computed using the formula
             <a href="https://wiki.kerbalspaceprogram.com/wiki/Specific_impulse#Multiple_engines">described here</a>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.KerbinSeaLevelSpecificImpulse">
             <summary>
             The combined specific impulse of all active engines at sea level on Kerbin, in seconds.
             This is computed using the formula
             <a href="https://wiki.kerbalspaceprogram.com/wiki/Specific_impulse#Multiple_engines">described here</a>.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.MomentOfInertia">
             <summary>
             The moment of inertia of the vessel around its center of mass in <math>kg.m^2</math>.
             The inertia values in the returned 3-tuple are around the
             pitch, roll and yaw directions respectively.
             This corresponds to the vessels reference frame (<see cref="T:KRPC.SpaceCenter.Services.ReferenceFrame" />).
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.InertiaTensor">
             <summary>
             The inertia tensor of the vessel around its center of mass,
             in the vessels reference frame (<see cref="T:KRPC.SpaceCenter.Services.ReferenceFrame" />).
             Returns the 3x3 matrix as a list of elements, in row-major order.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Vessel.ComputeInertiaTensor">
             <summary>
             Computes the inertia tensor of the vessel. Uses the parallel axis theorem to
             sum the contributions to the inertia tensor from every part in the vessel.
             It (ab)uses the Matrix4x4 class in order to do 3x3 matrix operations.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.AvailableTorque">
             <summary>
             The maximum torque that the vessel generates. Includes contributions from
             reaction wheels, RCS, gimballed engines and aerodynamic control surfaces.
             Returns the torques in <math>N.m</math> around each of the coordinate axes of the
             vessels reference frame (<see cref="T:KRPC.SpaceCenter.Services.ReferenceFrame" />).
             These axes are equivalent to the pitch, roll and yaw axes of the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.AvailableReactionWheelTorque">
             <summary>
             The maximum torque that the currently active and powered reaction wheels can generate.
             Returns the torques in <math>N.m</math> around each of the coordinate axes of the
             vessels reference frame (<see cref="T:KRPC.SpaceCenter.Services.ReferenceFrame" />).
             These axes are equivalent to the pitch, roll and yaw axes of the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.AvailableRCSTorque">
             <summary>
             The maximum torque that the currently active RCS thrusters can generate.
             Returns the torques in <math>N.m</math> around each of the coordinate axes of the
             vessels reference frame (<see cref="T:KRPC.SpaceCenter.Services.ReferenceFrame" />).
             These axes are equivalent to the pitch, roll and yaw axes of the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.AvailableEngineTorque">
             <summary>
             The maximum torque that the currently active and gimballed engines can generate.
             Returns the torques in <math>N.m</math> around each of the coordinate axes of the
             vessels reference frame (<see cref="T:KRPC.SpaceCenter.Services.ReferenceFrame" />).
             These axes are equivalent to the pitch, roll and yaw axes of the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.AvailableControlSurfaceTorque">
             <summary>
             The maximum torque that the aerodynamic control surfaces can generate.
             Returns the torques in <math>N.m</math> around each of the coordinate axes of the
             vessels reference frame (<see cref="T:KRPC.SpaceCenter.Services.ReferenceFrame" />).
             These axes are equivalent to the pitch, roll and yaw axes of the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.AvailableOtherTorque">
             <summary>
             The maximum torque that parts (excluding reaction wheels, gimballed engines,
             RCS and control surfaces) can generate.
             Returns the torques in <math>N.m</math> around each of the coordinate axes of the
             vessels reference frame (<see cref="T:KRPC.SpaceCenter.Services.ReferenceFrame" />).
             These axes are equivalent to the pitch, roll and yaw axes of the vessel.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.ReferenceFrame">
             <summary>
             The reference frame that is fixed relative to the vessel,
             and orientated with the vessel.
             <list type="bullet">
             <item><description>The origin is at the center of mass of the vessel.</description></item>
             <item><description>The axes rotate with the vessel.</description></item>
             <item><description>The x-axis points out to the right of the vessel.</description></item>
             <item><description>The y-axis points in the forward direction of the vessel.</description></item>
             <item><description>The z-axis points out of the bottom off the vessel.</description></item>
             </list>
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.OrbitalReferenceFrame">
             <summary>
             The reference frame that is fixed relative to the vessel,
             and orientated with the vessels orbital prograde/normal/radial directions.
             <list type="bullet">
             <item><description>The origin is at the center of mass of the vessel.</description></item>
             <item><description>The axes rotate with the orbital prograde/normal/radial directions.</description></item>
             <item><description>The x-axis points in the orbital anti-radial direction.</description></item>
             <item><description>The y-axis points in the orbital prograde direction.</description></item>
             <item><description>The z-axis points in the orbital normal direction.</description></item>
             </list>
             </summary>
             <remarks>
             Be careful not to confuse this with 'orbit' mode on the navball.
             </remarks>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.SurfaceReferenceFrame">
             <summary>
             The reference frame that is fixed relative to the vessel,
             and orientated with the surface of the body being orbited.
             <list type="bullet">
             <item><description>The origin is at the center of mass of the vessel.</description></item>
             <item><description>The axes rotate with the north and up directions on the surface of the body.</description></item>
             <item><description>The x-axis points in the <a href="https://en.wikipedia.org/wiki/Zenith">zenith</a>
             direction (upwards, normal to the body being orbited, from the center of the body towards the center of
             mass of the vessel).</description></item>
             <item><description>The y-axis points northwards towards the
             <a href="https://en.wikipedia.org/wiki/Horizon">astronomical horizon</a> (north, and tangential to the
             surface of the body -- the direction in which a compass would point when on the surface).</description></item>
             <item><description>The z-axis points eastwards towards the
             <a href="https://en.wikipedia.org/wiki/Horizon">astronomical horizon</a> (east, and tangential to the
             surface of the body -- east on a compass when on the surface).</description></item>
             </list>
             </summary>
             <remarks>
             Be careful not to confuse this with 'surface' mode on the navball.
             </remarks>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Vessel.SurfaceVelocityReferenceFrame">
             <summary>
             The reference frame that is fixed relative to the vessel,
             and orientated with the velocity vector of the vessel relative
             to the surface of the body being orbited.
             <list type="bullet">
             <item><description>The origin is at the center of mass of the vessel.</description></item>
             <item><description>The axes rotate with the vessel's velocity vector.</description></item>
             <item><description>The y-axis points in the direction of the vessel's velocity vector,
             relative to the surface of the body being orbited.</description></item>
             <item><description>The z-axis is in the plane of the
             <a href="https://en.wikipedia.org/wiki/Horizon">astronomical horizon</a>.</description></item>
             <item><description>The x-axis is orthogonal to the other two axes.</description></item>
             </list>
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Vessel.Position(KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The position of the center of mass of the vessel, in the given reference frame.
             </summary>
             <returns>The position as a vector.</returns>
             <param name="referenceFrame">The reference frame that the returned
             position vector is in.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Vessel.BoundingBox(KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The axis-aligned bounding box of the vessel in the given reference frame.
             </summary>
             <returns>The positions of the minimum and maximum vertices of the box,
             as position vectors.</returns>
             <param name="referenceFrame">The reference frame that the returned
             position vectors are in.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Vessel.Velocity(KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The velocity of the center of mass of the vessel, in the given reference frame.
             </summary>
             <returns>The velocity as a vector. The vector points in the direction of travel,
             and its magnitude is the speed of the body in meters per second.</returns>
             <param name="referenceFrame">The reference frame that the returned
             velocity vector is in.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Vessel.Rotation(KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The rotation of the vessel, in the given reference frame.
             </summary>
             <returns>The rotation as a quaternion of the form <math>(x, y, z, w)</math>.</returns>
             <param name="referenceFrame">The reference frame that the returned
             rotation is in.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Vessel.Direction(KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The direction in which the vessel is pointing, in the given reference frame.
             </summary>
             <returns>The direction as a unit vector.</returns>
             <param name="referenceFrame">The reference frame that the returned
             direction is in.</param>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Vessel.AngularVelocity(KRPC.SpaceCenter.Services.ReferenceFrame)">
             <summary>
             The angular velocity of the vessel, in the given reference frame.
             </summary>
             <returns>The angular velocity as a vector. The magnitude of the vector is the rotational
             speed of the vessel, in radians per second. The direction of the vector indicates the
             axis of rotation, using the right-hand rule.</returns>
             <param name="referenceFrame">The reference frame the returned
             angular velocity is in.</param>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.VesselSituation">
             <summary>
             The situation a vessel is in.
             See <see cref="P:KRPC.SpaceCenter.Services.Vessel.Situation" />.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.VesselSituation.PreLaunch">
             <summary>
             Vessel is awaiting launch.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.VesselSituation.Orbiting">
             <summary>
             Vessel is orbiting a body.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.VesselSituation.SubOrbital">
             <summary>
             Vessel is on a sub-orbital trajectory.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.VesselSituation.Escaping">
             <summary>
             Escaping.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.VesselSituation.Flying">
             <summary>
             Vessel is flying through an atmosphere.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.VesselSituation.Landed">
             <summary>
             Vessel is landed on the surface of a body.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.VesselSituation.Splashed">
             <summary>
             Vessel has splashed down in an ocean.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.VesselSituation.Docked">
             <summary>
             Vessel is docked to another.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.VesselType">
             <summary>
             The type of a vessel.
             See <see cref="P:KRPC.SpaceCenter.Services.Vessel.Type" />.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.VesselType.Base">
             <summary>
             Base.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.VesselType.Debris">
             <summary>
             Debris.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.VesselType.Lander">
             <summary>
             Lander.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.VesselType.Plane">
             <summary>
             Plane.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.VesselType.Probe">
             <summary>
             Probe.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.VesselType.Relay">
             <summary>
             Relay.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.VesselType.Rover">
             <summary>
             Rover.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.VesselType.Ship">
             <summary>
             Ship.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.Services.VesselType.Station">
             <summary>
             Station.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.WarpMode">
             <summary>
             The time warp mode.
             Returned by <see cref="T:KRPC.SpaceCenter.WarpMode" />
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.WarpMode.Rails">
             <summary>
             Time warp is active, and in regular "on-rails" mode.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.WarpMode.Physics">
             <summary>
             Time warp is active, and in physical time warp mode.
             </summary>
            </member>
        <member name="F:KRPC.SpaceCenter.WarpMode.None">
             <summary>
             Time warp is not active.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.Waypoint">
             <summary>
             Represents a waypoint. Can be created using <see cref="M:KRPC.SpaceCenter.Services.WaypointManager.AddWaypoint(System.Double,System.Double,KRPC.SpaceCenter.Services.CelestialBody,System.String)" />.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Waypoint.#ctor(System.Double,System.Double,System.Double,KRPC.SpaceCenter.Services.CelestialBody,System.String)">
             <summary>
             Create a waypoint object.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Waypoint.#ctor(FinePrint.Waypoint)">
             <summary>
             Create a waypoint object from a KSP waypoint.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Waypoint.InternalWaypoint">
             <summary>
             The KSP Waypoint.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Waypoint.Equals(KRPC.SpaceCenter.Services.Waypoint)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Waypoint.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Waypoint.Body">
             <summary>
             The celestial body the waypoint is attached to.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Waypoint.Name">
             <summary>
             The name of the waypoint as it appears on the map and the contract.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Waypoint.Color">
             <summary>
             The seed of the icon color. See <see cref="P:KRPC.SpaceCenter.Services.WaypointManager.Colors" /> for example colors.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Waypoint.Icon">
             <summary>
             The icon of the waypoint.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Waypoint.Latitude">
             <summary>
             The latitude of the waypoint.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Waypoint.Longitude">
             <summary>
             The longitude of the waypoint.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Waypoint.MeanAltitude">
             <summary>
             The altitude of the waypoint above sea level, in meters.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Waypoint.SurfaceAltitude">
             <summary>
             The altitude of the waypoint above the surface of the body or sea level,
             whichever is closer, in meters.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Waypoint.BedrockAltitude">
             <summary>
             The altitude of the waypoint above the surface of the body, in meters.
             When over water, this is the altitude above the sea floor.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Waypoint.NearSurface">
             <summary>
             <c>true</c> if the waypoint is near to the surface of a body.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Waypoint.Grounded">
             <summary>
             <c>true</c> if the waypoint is attached to the ground.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Waypoint.Index">
             <summary>
             The integer index of this waypoint within its cluster of sibling waypoints.
             In other words, when you have a cluster of waypoints called "Somewhere Alpha",
             "Somewhere Beta" and "Somewhere Gamma", the alpha site has index 0, the beta
             site has index 1 and the gamma site has index 2.
             When <see cref="P:KRPC.SpaceCenter.Services.Waypoint.Clustered" /> is <c>false</c>, this is zero.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Waypoint.Clustered">
             <summary>
             <c>true</c> if this waypoint is part of a set of clustered waypoints with greek letter
             names appended (Alpha, Beta, Gamma, etc).
             If <c>true</c>, there is a one-to-one correspondence with the greek letter name and
             the <see cref="P:KRPC.SpaceCenter.Services.Waypoint.Index" />.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Waypoint.HasContract">
             <summary>
             Whether the waypoint belongs to a contract.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.Waypoint.Contract">
             <summary>
             The associated contract.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.Waypoint.Remove">
             <summary>
             Removes the waypoint.
             </summary>
            </member>
        <member name="T:KRPC.SpaceCenter.Services.WaypointManager">
             <summary>
             Waypoints are the location markers you can see on the map view showing you where contracts are targeted for.
             With this structure, you can obtain coordinate data for the locations of these waypoints.
             Obtained by calling <see cref="P:KRPC.SpaceCenter.Services.SpaceCenter.WaypointManager" />.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.WaypointManager.Equals(KRPC.SpaceCenter.Services.WaypointManager)">
             <summary>
             Returns true if the objects are equal.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.WaypointManager.GetHashCode">
             <summary>
             Hash code for the object.
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.WaypointManager.Waypoints">
             <summary>
             A list of all existing waypoints.
             </summary>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.WaypointManager.AddWaypoint(System.Double,System.Double,KRPC.SpaceCenter.Services.CelestialBody,System.String)">
             <summary>
             Creates a waypoint at the given position at ground level, and returns a
             <see cref="T:KRPC.SpaceCenter.Services.Waypoint" /> object that can be used to modify it.
             </summary>
             <param name="latitude">Latitude of the waypoint.</param>
             <param name="longitude">Longitude of the waypoint.</param>
             <param name="body">Celestial body the waypoint is attached to.</param>
             <param name="name">Name of the waypoint.</param>
             <returns></returns>
            </member>
        <member name="M:KRPC.SpaceCenter.Services.WaypointManager.AddWaypointAtAltitude(System.Double,System.Double,System.Double,KRPC.SpaceCenter.Services.CelestialBody,System.String)">
             <summary>
             Creates a waypoint at the given position and altitude, and returns a
             <see cref="T:KRPC.SpaceCenter.Services.Waypoint" /> object that can be used to modify it.
             </summary>
             <param name="latitude">Latitude of the waypoint.</param>
             <param name="longitude">Longitude of the waypoint.</param>
             <param name="altitude">Altitude (above sea level) of the waypoint.</param>
             <param name="body">Celestial body the waypoint is attached to.</param>
             <param name="name">Name of the waypoint.</param>
             <returns></returns>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.WaypointManager.Icons">
             <summary>
             Returns all available icons (from "GameData/Squad/Contracts/Icons/").
             </summary>
            </member>
        <member name="P:KRPC.SpaceCenter.Services.WaypointManager.Colors">
             <summary>
             An example map of known color - seed pairs.
             Any other integers may be used as seed.
             </summary>
            </member>
    </members>
</doc>
